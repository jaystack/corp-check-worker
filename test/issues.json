[
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2621",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2621/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2621/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2621/events",
    "html_url": "https://github.com/reactjs/redux/issues/2621",
    "id": 259764012,
    "number": 2621,
    "title": "Switch string comparison is expensive (over 250)",
    "user": {
      "login": "vferko",
      "id": 2313018,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2313018?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vferko",
      "html_url": "https://github.com/vferko",
      "followers_url": "https://api.github.com/users/vferko/followers",
      "following_url": "https://api.github.com/users/vferko/following{/other_user}",
      "gists_url": "https://api.github.com/users/vferko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vferko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vferko/subscriptions",
      "organizations_url": "https://api.github.com/users/vferko/orgs",
      "repos_url": "https://api.github.com/users/vferko/repos",
      "events_url": "https://api.github.com/users/vferko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vferko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-22T09:58:08Z",
    "updated_at": "2017-09-22T09:58:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Since string comparisons in switch statement are expensive, why not compare references instead?\r\n- The speed difference is 250%. https://jsperf.com/redux-actions-string-vs-reference-comparison\r\n- The references are IDE friendly and one must not keep track of string constats.\r\n\r\n\r\n> If my understanding is wrong, please let me know.\r\n\r\nstrings:\r\n\r\n    one() {\r\n      dispatch({ type: 'ONE', payload: 1})\r\n    }\r\n\r\nreferences:\r\n\r\n    export one() {\r\n      dispatch(one, 1)\r\n    }\r\n\r\nthen instead of\r\n\r\n    switch (action.type) {\r\n      case 'ONE': ...\r\n      case 'TWOTWO': ...\r\n    }\r\n\r\nthis\r\n\r\n    import {actions} from './actions'\r\n    switch (action) {\r\n      case actions.one: ...\r\n      case actions.twoTwo: ...\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2620",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2620/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2620/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2620/events",
    "html_url": "https://github.com/reactjs/redux/issues/2620",
    "id": 259747641,
    "number": 2620,
    "title": "How to use multiple pages in react.js",
    "user": {
      "login": "vignesh25nithin",
      "id": 32014924,
      "avatar_url": "https://avatars0.githubusercontent.com/u/32014924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vignesh25nithin",
      "html_url": "https://github.com/vignesh25nithin",
      "followers_url": "https://api.github.com/users/vignesh25nithin/followers",
      "following_url": "https://api.github.com/users/vignesh25nithin/following{/other_user}",
      "gists_url": "https://api.github.com/users/vignesh25nithin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vignesh25nithin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vignesh25nithin/subscriptions",
      "organizations_url": "https://api.github.com/users/vignesh25nithin/orgs",
      "repos_url": "https://api.github.com/users/vignesh25nithin/repos",
      "events_url": "https://api.github.com/users/vignesh25nithin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vignesh25nithin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-22T08:57:20Z",
    "updated_at": "2017-09-22T08:57:20Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am a beginner to react.js, I came across react-router to set path for multiple pages but everything went in vain. If anyone could help me with steps to use multiple pages in react.js it would be of great help.\r\nI have two file app.js and display.js which must have link to another. I have an index.js as entry point.\r\nI don't want my app to be single page. so kindly give me guidance. Thanks in advance,"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2619",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2619/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2619/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2619/events",
    "html_url": "https://github.com/reactjs/redux/issues/2619",
    "id": 259721137,
    "number": 2619,
    "title": "IE11 error on createStore() and Edge renders a blank page",
    "user": {
      "login": "aptheod",
      "id": 6471299,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6471299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aptheod",
      "html_url": "https://github.com/aptheod",
      "followers_url": "https://api.github.com/users/aptheod/followers",
      "following_url": "https://api.github.com/users/aptheod/following{/other_user}",
      "gists_url": "https://api.github.com/users/aptheod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aptheod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aptheod/subscriptions",
      "organizations_url": "https://api.github.com/users/aptheod/orgs",
      "repos_url": "https://api.github.com/users/aptheod/repos",
      "events_url": "https://api.github.com/users/aptheod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aptheod/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-22T07:01:10Z",
    "updated_at": "2017-09-22T07:01:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello, I'm getting this error on IE11:\r\n**Actions must be plain objects. Use custom middleware for async actions.**\r\n\r\nI figured that createStore() is causing this error. My implementation of createStore() is the one below:\r\n\r\n```\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(sagaMiddleware)\r\n    )\r\n  )\r\n```\r\nI have even used the simple example here [http://redux.js.org/docs/api/createStore.html#example](url) to initialize a store, but it keeps crashing with the same error. Also In Edge it renders a blank page without JS errors. In all the other browsers it works fine, without any errors.\r\n\r\nRedux version: \"^3.7.2\"\r\n\r\nThank you\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2618",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2618/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2618/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2618/events",
    "html_url": "https://github.com/reactjs/redux/pull/2618",
    "id": 259383986,
    "number": 2618,
    "title": "Update the article 'Javascript and Immutability' url",
    "user": {
      "login": "holajiawei",
      "id": 31928088,
      "avatar_url": "https://avatars1.githubusercontent.com/u/31928088?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/holajiawei",
      "html_url": "https://github.com/holajiawei",
      "followers_url": "https://api.github.com/users/holajiawei/followers",
      "following_url": "https://api.github.com/users/holajiawei/following{/other_user}",
      "gists_url": "https://api.github.com/users/holajiawei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/holajiawei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/holajiawei/subscriptions",
      "organizations_url": "https://api.github.com/users/holajiawei/orgs",
      "repos_url": "https://api.github.com/users/holajiawei/repos",
      "events_url": "https://api.github.com/users/holajiawei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/holajiawei/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-21T06:01:38Z",
    "updated_at": "2017-09-21T13:54:03Z",
    "closed_at": "2017-09-21T13:54:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2618",
      "html_url": "https://github.com/reactjs/redux/pull/2618",
      "diff_url": "https://github.com/reactjs/redux/pull/2618.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2618.patch"
    },
    "body": "'Javascript and Immutability' The url is redirected to wrong location."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2617",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2617/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2617/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2617/events",
    "html_url": "https://github.com/reactjs/redux/pull/2617",
    "id": 258993842,
    "number": 2617,
    "title": "Documentation addition for best practice when using ImmutableJS and Selectors.",
    "user": {
      "login": "hally9k",
      "id": 3803536,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3803536?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hally9k",
      "html_url": "https://github.com/hally9k",
      "followers_url": "https://api.github.com/users/hally9k/followers",
      "following_url": "https://api.github.com/users/hally9k/following{/other_user}",
      "gists_url": "https://api.github.com/users/hally9k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hally9k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hally9k/subscriptions",
      "organizations_url": "https://api.github.com/users/hally9k/orgs",
      "repos_url": "https://api.github.com/users/hally9k/repos",
      "events_url": "https://api.github.com/users/hally9k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hally9k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-09-19T23:19:56Z",
    "updated_at": "2017-09-22T05:37:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2617",
      "html_url": "https://github.com/reactjs/redux/pull/2617",
      "diff_url": "https://github.com/reactjs/redux/pull/2617.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2617.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2616",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2616/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2616/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2616/events",
    "html_url": "https://github.com/reactjs/redux/issues/2616",
    "id": 258925481,
    "number": 2616,
    "title": "Broken HTTPS on https://reactjs.org",
    "user": {
      "login": "mickeyreiss-visor",
      "id": 30812527,
      "avatar_url": "https://avatars2.githubusercontent.com/u/30812527?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mickeyreiss-visor",
      "html_url": "https://github.com/mickeyreiss-visor",
      "followers_url": "https://api.github.com/users/mickeyreiss-visor/followers",
      "following_url": "https://api.github.com/users/mickeyreiss-visor/following{/other_user}",
      "gists_url": "https://api.github.com/users/mickeyreiss-visor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mickeyreiss-visor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mickeyreiss-visor/subscriptions",
      "organizations_url": "https://api.github.com/users/mickeyreiss-visor/orgs",
      "repos_url": "https://api.github.com/users/mickeyreiss-visor/repos",
      "events_url": "https://api.github.com/users/mickeyreiss-visor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mickeyreiss-visor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-19T18:51:50Z",
    "updated_at": "2017-09-19T20:55:14Z",
    "closed_at": "2017-09-19T19:23:16Z",
    "author_association": "NONE",
    "body": "I'm currently seeing an security certificate error on https://redux.js.org in Google Chrome Version 60.0.3112.113.\r\n\r\n![image](https://user-images.githubusercontent.com/30812527/30609613-bd186928-9d30-11e7-8348-d06880257205.png)\r\n![image](https://user-images.githubusercontent.com/30812527/30609617-c28767ec-9d30-11e7-9ba2-45542f477cda.png)\r\n![image](https://user-images.githubusercontent.com/30812527/30609636-cfc31b22-9d30-11e7-9f5b-eaaac8abd4dd.png)\r\n![image](https://user-images.githubusercontent.com/30812527/30609658-dec1dba4-9d30-11e7-8c05-775b47bc6f35.png)\r\n\r\n(edit: incorrect url)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2615",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2615/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2615/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2615/events",
    "html_url": "https://github.com/reactjs/redux/issues/2615",
    "id": 258832467,
    "number": 2615,
    "title": "replaceReducer was call several times whick is unexpected",
    "user": {
      "login": "hopperhuang",
      "id": 20254356,
      "avatar_url": "https://avatars1.githubusercontent.com/u/20254356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hopperhuang",
      "html_url": "https://github.com/hopperhuang",
      "followers_url": "https://api.github.com/users/hopperhuang/followers",
      "following_url": "https://api.github.com/users/hopperhuang/following{/other_user}",
      "gists_url": "https://api.github.com/users/hopperhuang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hopperhuang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hopperhuang/subscriptions",
      "organizations_url": "https://api.github.com/users/hopperhuang/orgs",
      "repos_url": "https://api.github.com/users/hopperhuang/repos",
      "events_url": "https://api.github.com/users/hopperhuang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hopperhuang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-19T14:03:00Z",
    "updated_at": "2017-09-19T14:23:26Z",
    "closed_at": "2017-09-19T14:23:26Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\ni think it's a bug? i am not sure what it is, i am wondering about this.\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nthe replaceReducer function is call serveral times which is not expected\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\ni wanna hava code spilit in my projject , so  i use webpack bundle-loader in my project. but i am not  just satisfied with the dynamic component. i wanna make my reducer load dynamicly too. so that i use replaceReducer method to load my asyncReducer.\r\n\r\nhere is my bundle loader : \r\n```\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport registerModel from './models';\r\n\r\nexport default class Bundle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // short for \"module\" but that's a keyword in js, so \"mod\"\r\n      mod: null,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.load(this.props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.load !== this.props.load) {\r\n      this.load(nextProps);\r\n    }\r\n  }\r\n\r\n  load(props) {\r\n    this.setState({\r\n      mod: null,\r\n    });\r\n    console.log(323232);\r\n    registerModel(props.model, props.store);\r\n    props.load((mod) => {\r\n      this.setState({\r\n        // handle both es imports and cjs\r\n        mod: mod.default ? mod.default : mod,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.state.mod ? this.props.children(this.state.mod) : null;\r\n  }\r\n}\r\n\r\nBundle.propTypes = {\r\n  load: PropTypes.func.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n};\r\n```\r\nwhen the component is load, it will call the reigsterModel method to register the reducer.\r\n\r\nhere is the register method: \r\n```\r\nexport default function registerModel(model, store) {\r\n  const { namespace, reducers, effects } = model;\r\n  const defaultState = model.state;\r\n  const asyncReducer = getAsyncReducer(reducers, namespace, defaultState);\r\n  // 加载reudcer\r\n  store.replaceReducer(combineReducers({ [namespace]: asyncReducer, ...basicReducer }));\r\n  // // 加载saga\r\n  // store.runSaga(getEffects, effects, namespace);\r\n  console.log('before');\r\n  if (!cache[namespace]) {\r\n    console.log('middle');\r\n    store.runSaga(getEffects, effects, namespace);\r\n    cache[namespace] = true;\r\n  }\r\n  console.log('after');\r\n}\r\n```\r\nthe register model will call the replaceReducer Method everytime when the load method in bundle.js call it.\r\n\r\nokay now when have two pages.\r\n the first one is the entry page, its path is './entry'. the second one is the guild page. its path is './guild'.\r\n\r\nnow we have button a button in entry page, when i click the button it will dispacth a action\r\n```\r\nonLeftClick={() => dispatch({ type: 'abc-firstload' })}\r\n```\r\nthen the redux-saga-middleware will accept this method and call the reducer.\r\n\r\n```\r\neffects: {\r\n    * firstload({ put }) {\r\n      yield put({ type: 'ddd' });\r\n    },\r\n  },\r\n};\r\n```\r\n```\r\nddd(state, action) {\r\n      console.log('656565');\r\n      return { ...state };\r\n    },\r\n```\r\nthe numbers will appear in the logger.\r\n\r\nokay now, all is fine .\r\n\r\nbut if you click the button several times, after doing this, you go into another page  , i just say we have 2 page. i go to the  guild page, and then i go back to the entry page. now something strange happens.\r\n\r\n![image](https://user-images.githubusercontent.com/20254356/30595313-6c80b1c0-9d83-11e7-8602-6a4c7fce4a41.png)\r\n\r\n\r\nwhen we go back to the entry page, the bundl.js will load the component async. it will call the load method so that the 323232 numbers will appear once . but unexpectly the '656565' strings appear 6 times, which means the add methed is called 6 times. This is strange, so i log the call stack in my chorme explorer. you can see the below picture. And i have tried to log the action in logger, is not the init action.\r\nwhen call replaceReducer, i will dispatch an init method, am i right ?\r\n![image](https://user-images.githubusercontent.com/20254356/30595581-282b0a42-9d84-11e7-94ba-72f37e5e09e7.png)\r\n\r\nyou can see in the call stack, add was called by the replaceReducer, replaceReducer was called by the load method. But its obviously the 323232 just appear once, the means load method in bundle.js just call once. but the registerModel was called 6 times.  here is my model.js code. you can see that registerModel will not be called in its own function.\r\n\r\n```\r\nimport * as _sagaEffects from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport basicReducer from './Reducer/Index';\r\n\r\n\r\nconst { fork } = _sagaEffects;\r\nconst cache = {};\r\n\r\nfunction getAsyncReducer(reducers, namespace, defaultState) {\r\n  const reducerKeys = Object.keys(reducers);\r\n  const perFixReducer = {};\r\n  for (let index = 0; index < reducerKeys.length; index++) {\r\n    const reducerKey = reducerKeys[index];\r\n    perFixReducer[`${namespace}-${reducerKey}`] = reducers[reducerKey];\r\n  }\r\n  const asyncReducers = (state = defaultState, action) => {\r\n    const { type } = action;\r\n    if (perFixReducer[type]) {\r\n      return perFixReducer[type](state, action);\r\n    }\r\n    return state;\r\n  };\r\n  return asyncReducers;\r\n}\r\n\r\nfunction makeWatcher(takeValue, effect, namespace) {\r\n  const put = (_action) => {\r\n    const action = _action;\r\n    const oldMethod = _sagaEffects.put;\r\n    const { type } = action;\r\n    if (type.indexOf('-') < 0) {\r\n      action.type = `${namespace}-${type}`;\r\n    }\r\n    // 返回一个put包裹过的对象给yield\r\n    return oldMethod(action);\r\n  };\r\n  const sagaEffects = { ..._sagaEffects, put };\r\n  const type = typeof effect;\r\n  if (type === 'array') {\r\n    const helperType = effect[1].type;\r\n    const ms = effect[1].ms;\r\n    if (helperType === 'throttle') {\r\n      return function* throttleWatcher() {\r\n        yield sagaEffects[helperType](ms, takeValue, effect, sagaEffects);\r\n      };\r\n    }\r\n    if (helperType === 'takeLatest') {\r\n      return function* takeLastWatcher() {\r\n        yield sagaEffects[helperType](takeValue, effect, sagaEffects);\r\n      };\r\n    }\r\n  }\r\n  return function* takeEveryWatcher() {\r\n    yield sagaEffects.takeEvery(takeValue, effect, sagaEffects);\r\n  };\r\n}\r\n\r\nfunction getWatcher(key, effect, namespace) {\r\n  const takeValue = `${namespace}-${key}`;\r\n  return makeWatcher(takeValue, effect, namespace);\r\n}\r\n\r\n\r\n// rootsaga\r\nfunction* getEffects(effects, namespace) {\r\n  const effectsKeys = Object.keys(effects);\r\n  for (let index = 0; index < effectsKeys.length; index++) {\r\n    const key = effectsKeys[index];\r\n    const effect = effects[key];\r\n    const watcher = getWatcher(key, effect, namespace);\r\n    yield fork(watcher);\r\n  }\r\n}\r\n\r\n\r\n// 注册model\r\nexport default function registerModel(model, store) {\r\n  const { namespace, reducers, effects } = model;\r\n  const defaultState = model.state;\r\n  const asyncReducer = getAsyncReducer(reducers, namespace, defaultState);\r\n  // 加载reudcer\r\n  store.replaceReducer(combineReducers({ [namespace]: asyncReducer, ...basicReducer }));\r\n  // // 加载saga\r\n  // store.runSaga(getEffects, effects, namespace);\r\n  console.log('before');\r\n  if (!cache[namespace]) {\r\n    console.log('middle');\r\n    store.runSaga(getEffects, effects, namespace);\r\n    cache[namespace] = true;\r\n  }\r\n  console.log('after');\r\n}\r\n```\r\n\r\nthis make me very doubtful. can you fix this bug ?? i am wondering is there something wrong in my code, or in the reudx. so i write this issue\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nreducer method will not call, when replaceRducer.\r\n\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nexplore: chrome,\r\nos: windows 10\r\nredux.min.js 3.7.2\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2614",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2614/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2614/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2614/events",
    "html_url": "https://github.com/reactjs/redux/issues/2614",
    "id": 258801671,
    "number": 2614,
    "title": "destructuring import fails in native mjs-file",
    "user": {
      "login": "pe3",
      "id": 82331,
      "avatar_url": "https://avatars0.githubusercontent.com/u/82331?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pe3",
      "html_url": "https://github.com/pe3",
      "followers_url": "https://api.github.com/users/pe3/followers",
      "following_url": "https://api.github.com/users/pe3/following{/other_user}",
      "gists_url": "https://api.github.com/users/pe3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pe3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pe3/subscriptions",
      "organizations_url": "https://api.github.com/users/pe3/orgs",
      "repos_url": "https://api.github.com/users/pe3/repos",
      "events_url": "https://api.github.com/users/pe3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pe3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-19T12:25:18Z",
    "updated_at": "2017-09-19T15:57:45Z",
    "closed_at": "2017-09-19T14:22:30Z",
    "author_association": "NONE",
    "body": "This doesn't work when running with Node.js 8.5 experimental modules support\r\n\r\n```\r\n//redux.mjs\r\nimport { createStore } from \"redux\"\r\n\r\nfunction counter(state = 0, action) {\r\n  switch (action.type) {\r\n  case 'INCREMENT':\r\n    return state + 1\r\n  case 'DECREMENT':\r\n    return state - 1\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nlet store = createStore(counter)\r\nstore.subscribe(() =>\r\n  console.log(store.getState())\r\n)\r\nstore.dispatch({ type: 'INCREMENT' })\r\nstore.dispatch({ type: 'INCREMENT' })\r\nstore.dispatch({ type: 'INCREMENT' })\r\n```\r\nI'm getting this error:\r\n```\r\n$ node --experimental-modules --no-warnings redux.mjs \r\nSyntaxError: The requested module does not provide an export named 'createStore'\r\n    at checkComplete (internal/loader/ModuleJob.js:86:27)\r\n    at moduleJob.linked.then (internal/loader/ModuleJob.js:69:11)\r\n    at <anonymous>\r\n```\r\nI starts working if I do the destructuring after the import instead:\r\n```\r\nimport redux from \"redux\"\r\nconst { createStore } = redux\r\n```\r\nOK. That's an experimental feature, but the same happens when importing through [@std/esm](https://github.com/standard-things/esm) and running without experimental modules so one starts to wonder if there is something wrong with the Redux module and if it only works when used through Babel :\r\n```\r\n// index.js\r\nrequire = require(\"@std/esm\")(module)\r\nmodule.exports = require(\"./redux.mjs\").default\r\n```\r\nExactly same behavior repeats:\r\n```\r\n$ node index.js \r\nSyntaxError: Module '/private/tmp/fc1c5a2f65d756568d28afc2db4fa0ae/node_modules/redux/lib/index.js' does not provide an export named 'createStore'\r\n    at /private/tmp/fc1c5a2f65d756568d28afc2db4fa0ae/redux.mjs\r\n    at Object.<anonymous> (/private/tmp/fc1c5a2f65d756568d28afc2db4fa0ae/redux.mjs)\r\n```\r\nAgain it works if the destructuring is done separately:\r\n```\r\nimport redux from \"redux\"\r\nconst { createStore } = redux\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect desctructuring to work in imports since that is the format used in Redux docs.\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nVersions:\r\n- redux: 3.7.2\r\n- node: 8.5.0\r\n- std/esm: 0.10.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2613",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2613/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2613/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2613/events",
    "html_url": "https://github.com/reactjs/redux/issues/2613",
    "id": 258580862,
    "number": 2613,
    "title": "Feature: expose the `reducers` mapping object supplied to `combineReducers()`",
    "user": {
      "login": "jmar777",
      "id": 183199,
      "avatar_url": "https://avatars3.githubusercontent.com/u/183199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmar777",
      "html_url": "https://github.com/jmar777",
      "followers_url": "https://api.github.com/users/jmar777/followers",
      "following_url": "https://api.github.com/users/jmar777/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmar777/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmar777/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmar777/subscriptions",
      "organizations_url": "https://api.github.com/users/jmar777/orgs",
      "repos_url": "https://api.github.com/users/jmar777/repos",
      "events_url": "https://api.github.com/users/jmar777/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmar777/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-09-18T18:43:15Z",
    "updated_at": "2017-09-19T21:00:30Z",
    "closed_at": "2017-09-19T19:27:49Z",
    "author_association": "NONE",
    "body": "The reducer returned from `combineReducers()` is currently an opaque function with respect to the original reducers that comprise it. While this is typically desirable, there may be benefits to allowing enhancers to perform some introspection.\r\n\r\n**Example Use Case:**\r\n\r\nSeveral store enhancers currently exist <sup>[1]</sup> that allow \"slices\" of state to be dynamically added and removed from the store. Related behavior has also been provided by Dan Abramov<sup>[2]</sup>.\r\n\r\nIf the initial reducers object was attached to `combination` <sup>[3]</sup> (we'll assign it to the `_reducers` property for this example), the functionality described above could trivially be achieved using a store enhancer:\r\n\r\n```js\r\nlet initialReducers;\r\nlet store;\r\n\r\nexports.enhancer = createStore => (reducer, preloadedState, enhancer) => {\r\n  store = createStore(reducer, preloadedState, enhancer);\r\n  initialReducers = reducer._reducers;\r\n\r\n  return store;\r\n};\r\n\r\nexports.addSlice = (key, reducer) => {\r\n  store.replaceReducer(combineReducers({\r\n    ...initialReducers,\r\n    [key]: reducer\r\n  });\r\n\r\n  store.dispatch(/* something to \"wake up\" the new reducer */);\r\n};\r\n```\r\n\r\n**Why not just create another module that does this?**\r\n\r\nI wholly respect that `combineReducers()` is neither intended nor presented as the one-true approach to slice management, but I also support paving cowpaths. This is a two-line addition with no backwards compatibility concerns or API changes relevant to regular usage. In exchange, it opens the door to some useful reducer manipulation, including patterns like the one in the example that assist with both code organization and code splitting. The benefit of including this in redux core vs. a new module is the increased interoperability of these enhancers, as they have a consistent and ubiquitously used property to target (i.e., `_reducers`).\r\n\r\nThoughts?\r\n\r\n[1] [redux-inject-reducer](https://github.com/umidbekkarimov/redux-inject-reducer), [paradux](https://github.com/asteridux/paradux), [redux-dynamix](https://www.npmjs.com/package/redux-dynamix), [redux-react-dynamic-store](https://github.com/kravchenkodev/redux-react-dynamic-store), [ReducerRegistry](https://github.com/insin/react-examples/blob/master/code-splitting-redux-reducers/ReducerRegistry.js)\r\n[2] https://stackoverflow.com/questions/32968016/how-to-dynamically-load-reducers-for-code-splitting-in-a-redux-application/33044701#33044701\r\n[3] https://github.com/reactjs/redux/blob/master/src/combineReducers.js#L132"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2612",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2612/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2612/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2612/events",
    "html_url": "https://github.com/reactjs/redux/issues/2612",
    "id": 258180426,
    "number": 2612,
    "title": "Redux Doc's Advanced Middleware Section Wrong Order",
    "user": {
      "login": "icharlie2",
      "id": 19414304,
      "avatar_url": "https://avatars0.githubusercontent.com/u/19414304?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icharlie2",
      "html_url": "https://github.com/icharlie2",
      "followers_url": "https://api.github.com/users/icharlie2/followers",
      "following_url": "https://api.github.com/users/icharlie2/following{/other_user}",
      "gists_url": "https://api.github.com/users/icharlie2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icharlie2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icharlie2/subscriptions",
      "organizations_url": "https://api.github.com/users/icharlie2/orgs",
      "repos_url": "https://api.github.com/users/icharlie2/repos",
      "events_url": "https://api.github.com/users/icharlie2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icharlie2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-15T22:29:27Z",
    "updated_at": "2017-09-16T04:08:56Z",
    "closed_at": "2017-09-16T04:08:56Z",
    "author_association": "NONE",
    "body": "Hi guys, in reference to this particular doc page http://redux.js.org/docs/advanced/Middleware.html,\r\n\r\nThe bottom of Attempt#3 applies the patches in this order: \r\n\r\n```\r\npatchStoreToAddLogging(store)\r\npatchStoreToAddCrashReporting(store)\r\n```\r\n\r\nhowever in Attempt#4 and higher the patches are applied in the reverse order since \r\napplyMiddlewareByMonkeypatching reverses the array before applying each middleware.\r\n\r\n`applyMiddlewareByMonkeypatching(store, [logger, crashReporter])`\r\n\r\nI think that the action should run through the crashReporter prior to the logger, so I believe Attempt#3 is correct and the others are reverse. Can anyone else confirm?"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2611",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2611/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2611/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2611/events",
    "html_url": "https://github.com/reactjs/redux/issues/2611",
    "id": 257808616,
    "number": 2611,
    "title": "Using ES6 multilline string in index.js",
    "user": {
      "login": "danedavid",
      "id": 19928280,
      "avatar_url": "https://avatars3.githubusercontent.com/u/19928280?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danedavid",
      "html_url": "https://github.com/danedavid",
      "followers_url": "https://api.github.com/users/danedavid/followers",
      "following_url": "https://api.github.com/users/danedavid/following{/other_user}",
      "gists_url": "https://api.github.com/users/danedavid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danedavid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danedavid/subscriptions",
      "organizations_url": "https://api.github.com/users/danedavid/orgs",
      "repos_url": "https://api.github.com/users/danedavid/repos",
      "events_url": "https://api.github.com/users/danedavid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danedavid/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-09-14T18:09:03Z",
    "updated_at": "2017-09-15T15:49:09Z",
    "closed_at": "2017-09-14T18:13:29Z",
    "author_association": "NONE",
    "body": "Couldn't we use es6 multiline string using backtick in the parameter passed to `warning()` function in `src/index.js` ?\r\n\r\n```\r\n{\r\n  warning(\r\n    'You are currently using minified code outside of NODE_ENV === \\'production\\'. ' +\r\n    'This means that you are running a slower development build of Redux. ' +\r\n    'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +\r\n    'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' +\r\n    'to ensure you have the correct code for your production build.'\r\n  )\r\n}```"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2610",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2610/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2610/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2610/events",
    "html_url": "https://github.com/reactjs/redux/pull/2610",
    "id": 257762453,
    "number": 2610,
    "title": "Update server.js",
    "user": {
      "login": "mohamed-ismat",
      "id": 22646941,
      "avatar_url": "https://avatars3.githubusercontent.com/u/22646941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohamed-ismat",
      "html_url": "https://github.com/mohamed-ismat",
      "followers_url": "https://api.github.com/users/mohamed-ismat/followers",
      "following_url": "https://api.github.com/users/mohamed-ismat/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohamed-ismat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohamed-ismat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohamed-ismat/subscriptions",
      "organizations_url": "https://api.github.com/users/mohamed-ismat/orgs",
      "repos_url": "https://api.github.com/users/mohamed-ismat/repos",
      "events_url": "https://api.github.com/users/mohamed-ismat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohamed-ismat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-14T15:31:13Z",
    "updated_at": "2017-09-14T16:59:16Z",
    "closed_at": "2017-09-14T16:59:16Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2610",
      "html_url": "https://github.com/reactjs/redux/pull/2610",
      "diff_url": "https://github.com/reactjs/redux/pull/2610.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2610.patch"
    },
    "body": "'path' is defined but never used"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2609",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2609/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2609/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2609/events",
    "html_url": "https://github.com/reactjs/redux/issues/2609",
    "id": 257303467,
    "number": 2609,
    "title": "Error install redux on Ubuntu 16.04?",
    "user": {
      "login": "thiennhank9",
      "id": 18640233,
      "avatar_url": "https://avatars2.githubusercontent.com/u/18640233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thiennhank9",
      "html_url": "https://github.com/thiennhank9",
      "followers_url": "https://api.github.com/users/thiennhank9/followers",
      "following_url": "https://api.github.com/users/thiennhank9/following{/other_user}",
      "gists_url": "https://api.github.com/users/thiennhank9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thiennhank9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thiennhank9/subscriptions",
      "organizations_url": "https://api.github.com/users/thiennhank9/orgs",
      "repos_url": "https://api.github.com/users/thiennhank9/repos",
      "events_url": "https://api.github.com/users/thiennhank9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thiennhank9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-13T08:50:35Z",
    "updated_at": "2017-09-13T14:35:10Z",
    "closed_at": "2017-09-13T14:35:10Z",
    "author_association": "NONE",
    "body": "Hi guys,\r\nI installed redux successfully on windows 10 64 bit.\r\nBut when I'm on Ubuntu 16.04 64bit, I can't install redux.\r\nIt shows this error.\r\n![1](https://user-images.githubusercontent.com/18640233/30368407-4254bb4a-989b-11e7-8c28-06714cdc7317.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2608",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2608/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2608/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2608/events",
    "html_url": "https://github.com/reactjs/redux/pull/2608",
    "id": 257090285,
    "number": 2608,
    "title": "Update UsingImmutableJS.md",
    "user": {
      "login": "mohamed-ismat",
      "id": 22646941,
      "avatar_url": "https://avatars3.githubusercontent.com/u/22646941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohamed-ismat",
      "html_url": "https://github.com/mohamed-ismat",
      "followers_url": "https://api.github.com/users/mohamed-ismat/followers",
      "following_url": "https://api.github.com/users/mohamed-ismat/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohamed-ismat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohamed-ismat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohamed-ismat/subscriptions",
      "organizations_url": "https://api.github.com/users/mohamed-ismat/orgs",
      "repos_url": "https://api.github.com/users/mohamed-ismat/repos",
      "events_url": "https://api.github.com/users/mohamed-ismat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohamed-ismat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-12T15:38:53Z",
    "updated_at": "2017-09-12T16:04:50Z",
    "closed_at": "2017-09-12T16:04:50Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2608",
      "html_url": "https://github.com/reactjs/redux/pull/2608",
      "diff_url": "https://github.com/reactjs/redux/pull/2608.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2608.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2607",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2607/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2607/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2607/events",
    "html_url": "https://github.com/reactjs/redux/pull/2607",
    "id": 256981844,
    "number": 2607,
    "title": "Improve combineReducers type def with keyof",
    "user": {
      "login": "garbles",
      "id": 1139884,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1139884?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/garbles",
      "html_url": "https://github.com/garbles",
      "followers_url": "https://api.github.com/users/garbles/followers",
      "following_url": "https://api.github.com/users/garbles/following{/other_user}",
      "gists_url": "https://api.github.com/users/garbles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/garbles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/garbles/subscriptions",
      "organizations_url": "https://api.github.com/users/garbles/orgs",
      "repos_url": "https://api.github.com/users/garbles/repos",
      "events_url": "https://api.github.com/users/garbles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/garbles/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-12T09:44:34Z",
    "updated_at": "2017-09-13T15:31:55Z",
    "closed_at": "2017-09-12T14:18:54Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2607",
      "html_url": "https://github.com/reactjs/redux/pull/2607",
      "diff_url": "https://github.com/reactjs/redux/pull/2607.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2607.patch"
    },
    "body": "With this change, the following code will _now_ fail the TypeScript static check. At present it does not fail.\r\n\r\n```ts\r\ntype State = {\r\n  a: A;\r\n  b: B;\r\n  c: C;\r\n};\r\n\r\nfunction aReducer(state: A, action: AnyAction): A;\r\nfunction bReducer(state: B, action: AnyAction): B;\r\nfunction cReducer(state: C, action: AnyAction): C;\r\n\r\n// should fail: no key \"c\" using cReducer\r\ncombineReducers<State>({\r\n  a: aReducer,\r\n  b: bReducer\r\n});\r\n\r\n// should fail: \"a\" is using wrong reducer\r\ncombineReducers<State>({\r\n  a: bReducer,\r\n  b: bReducer,\r\n  c: cReducer\r\n});\r\n```\r\n\r\n Previously, you could have passed _any_ object to `combineReducers` and the checker was OK with it. e.g.\r\n\r\n```ts\r\ncombineReducers<State>({\r\n  fart: () => { return null };\r\n});\r\n```\r\n\r\nThe definition for compose was broken for TypeScript @ 2.X so I fixed that as well by removing [this line](https://github.com/reactjs/redux/pull/2607/files#diff-b52768974e6bc0faccb7d4b75b162c99L386)."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2606",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2606/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2606/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2606/events",
    "html_url": "https://github.com/reactjs/redux/pull/2606",
    "id": 256855168,
    "number": 2606,
    "title": "Fixes typo in Redux FAQ: Immutable Data",
    "user": {
      "login": "duncanleung",
      "id": 1765048,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1765048?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duncanleung",
      "html_url": "https://github.com/duncanleung",
      "followers_url": "https://api.github.com/users/duncanleung/followers",
      "following_url": "https://api.github.com/users/duncanleung/following{/other_user}",
      "gists_url": "https://api.github.com/users/duncanleung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duncanleung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duncanleung/subscriptions",
      "organizations_url": "https://api.github.com/users/duncanleung/orgs",
      "repos_url": "https://api.github.com/users/duncanleung/repos",
      "events_url": "https://api.github.com/users/duncanleung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duncanleung/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-11T21:58:54Z",
    "updated_at": "2017-09-11T23:50:13Z",
    "closed_at": "2017-09-11T23:50:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2606",
      "html_url": "https://github.com/reactjs/redux/pull/2606",
      "diff_url": "https://github.com/reactjs/redux/pull/2606.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2606.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2605",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2605/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2605/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2605/events",
    "html_url": "https://github.com/reactjs/redux/issues/2605",
    "id": 256739347,
    "number": 2605,
    "title": "How to update multiple state based on Id ?",
    "user": {
      "login": "amituidev",
      "id": 4736314,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4736314?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amituidev",
      "html_url": "https://github.com/amituidev",
      "followers_url": "https://api.github.com/users/amituidev/followers",
      "following_url": "https://api.github.com/users/amituidev/following{/other_user}",
      "gists_url": "https://api.github.com/users/amituidev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amituidev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amituidev/subscriptions",
      "organizations_url": "https://api.github.com/users/amituidev/orgs",
      "repos_url": "https://api.github.com/users/amituidev/repos",
      "events_url": "https://api.github.com/users/amituidev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amituidev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-11T15:13:45Z",
    "updated_at": "2017-09-11T15:45:45Z",
    "closed_at": "2017-09-11T15:43:21Z",
    "author_association": "NONE",
    "body": "I trying this but getting modified state as array of map in response but i want only Map not array of maps.\r\n\r\n```\r\nfunction appReducer(state = initialState, action) {\r\n      switch (action.type) {\r\n        case CREATIVE_CHANGE_STATE:\r\n           const updateBlockedState = action.ids.map((id) => state\r\n               .setIn([\"allCreatives\", 'creatives', id, 'cardState'], 'block-pending'));\r\n          return updateBlockedState;`\r\n }\r\n\r\n```\r\nAny ideas why? "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2604",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2604/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2604/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2604/events",
    "html_url": "https://github.com/reactjs/redux/pull/2604",
    "id": 256631381,
    "number": 2604,
    "title": "Add listenerID to correctly remove subscription when listener was subscribed repeatedly",
    "user": {
      "login": "jin5354",
      "id": 6868950,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6868950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jin5354",
      "html_url": "https://github.com/jin5354",
      "followers_url": "https://api.github.com/users/jin5354/followers",
      "following_url": "https://api.github.com/users/jin5354/following{/other_user}",
      "gists_url": "https://api.github.com/users/jin5354/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jin5354/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jin5354/subscriptions",
      "organizations_url": "https://api.github.com/users/jin5354/orgs",
      "repos_url": "https://api.github.com/users/jin5354/repos",
      "events_url": "https://api.github.com/users/jin5354/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jin5354/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-09-11T09:06:13Z",
    "updated_at": "2017-09-11T15:41:40Z",
    "closed_at": "2017-09-11T15:41:40Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2604",
      "html_url": "https://github.com/reactjs/redux/pull/2604",
      "diff_url": "https://github.com/reactjs/redux/pull/2604.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2604.patch"
    },
    "body": "```javascript\r\nconst index = nextListeners.indexOf(listener)\r\nnextListeners.splice(index, 1)\r\n```\r\n\r\nIn createStore.js, use `indexOf(listener)` will only return the first listener when listener was subscribed multiply. If you unsubscribe a listener which isn't the first one, the first one will \r\n be removed and listeners' execute sequence will be disorder.\r\n\r\nThis PR add listenerID to help correctly remove the subscription in this scenario.\r\n\r\nbug demo jsfiddle: https://jsfiddle.net/jin5354/m3ahmhL9/"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2603",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2603/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2603/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2603/events",
    "html_url": "https://github.com/reactjs/redux/pull/2603",
    "id": 256557891,
    "number": 2603,
    "title": "Add support for async & void middleware functions",
    "user": {
      "login": "alexburner",
      "id": 409114,
      "avatar_url": "https://avatars3.githubusercontent.com/u/409114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexburner",
      "html_url": "https://github.com/alexburner",
      "followers_url": "https://api.github.com/users/alexburner/followers",
      "following_url": "https://api.github.com/users/alexburner/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexburner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexburner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexburner/subscriptions",
      "organizations_url": "https://api.github.com/users/alexburner/orgs",
      "repos_url": "https://api.github.com/users/alexburner/repos",
      "events_url": "https://api.github.com/users/alexburner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexburner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-11T01:25:42Z",
    "updated_at": "2017-09-15T22:19:25Z",
    "closed_at": "2017-09-11T02:13:46Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2603",
      "html_url": "https://github.com/reactjs/redux/pull/2603",
      "diff_url": "https://github.com/reactjs/redux/pull/2603.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2603.patch"
    },
    "body": "This is the fix proposed in issue https://github.com/reactjs/redux/issues/2602"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2602",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2602/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2602/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2602/events",
    "html_url": "https://github.com/reactjs/redux/issues/2602",
    "id": 256557583,
    "number": 2602,
    "title": "TypeScript: type definitions for async middleware",
    "user": {
      "login": "alexburner",
      "id": 409114,
      "avatar_url": "https://avatars3.githubusercontent.com/u/409114?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexburner",
      "html_url": "https://github.com/alexburner",
      "followers_url": "https://api.github.com/users/alexburner/followers",
      "following_url": "https://api.github.com/users/alexburner/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexburner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexburner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexburner/subscriptions",
      "organizations_url": "https://api.github.com/users/alexburner/orgs",
      "repos_url": "https://api.github.com/users/alexburner/repos",
      "events_url": "https://api.github.com/users/alexburner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexburner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-11T01:22:11Z",
    "updated_at": "2017-09-11T02:20:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nBug?\r\n\r\n**What is the current behavior?**\r\nIn [the definitions file](https://github.com/reactjs/redux/blob/master/index.d.ts), the interface for Middleware is:\r\n```js\r\ninterface Dispatch<S> {\r\n    <A extends Action>(action: A): A;\r\n}\r\n\r\nexport interface MiddlewareAPI<S> {\r\n  dispatch: Dispatch<S>;\r\n  getState(): S;\r\n}\r\n\r\ninterface Middleware {\r\n  <S>(api: MiddlewareAPI<S>): (next: Dispatch<S>) => Dispatch<S>;\r\n}\r\n```\r\n\r\nSince the final function in the middleware thunk is typed as `Dispatch<S>`, it is required to synchronously return an `A` action. However, custom middleware should support other behaviors. In the definitions file:\r\n```\r\n * Middleware wraps the base dispatch function. It allows the dispatch\r\n * function to handle async actions in addition to actions. Middleware may\r\n * transform, delay, ignore, or otherwise interpret actions or async actions\r\n * before passing them to the next middleware.\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\nIf I attempt to add a type to the `vanillaPromise` from [the middleware examples](http://redux.js.org/docs/advanced/Middleware.html#seven-examples):\r\n```js\r\nimport { Middleware } from 'redux'\r\nconst middleware: Middleware = store => next => action => {\r\n  if (typeof action.then !== 'function') {\r\n    return next(action)\r\n  }\r\n\r\n  return Promise.resolve(action).then(store.dispatch)\r\n}\r\n```\r\nTypeScript throws the following errors:\r\n```js\r\nERROR in [at-loader] ./src/index.tsx:23:7 \r\n    TS2322: Type '<S>(store: MiddlewareAPI<S>) => (next: Dispatch<S>) => <A extends Action>(action: A) => A | Promi...' is not assignable to type 'Middleware'.\r\n  Type '(next: Dispatch<S>) => <A extends Action>(action: A) => A | Promise<A>' is not assignable to type '(next: Dispatch<S>) => Dispatch<S>'.\r\n    Type '<A extends Action>(action: A) => A | Promise<A>' is not assignable to type 'Dispatch<S>'.\r\n      Type 'A | Promise<A>' is not assignable to type 'A'.\r\n        Type 'Promise<A>' is not assignable to type 'A'.\r\n\r\nERROR in [at-loader] ./src/index.tsx:24:21 \r\n    TS2339: Property 'then' does not exist on type 'A'.\r\n```\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nI'd expect the Middleware interface to allow returning a promise-wrapped action, or void, or etc. I'm not sure the actual fix for this... Maybe something like:\r\n\r\n```js\r\nexport interface MiddlewareDispatch<S> {\r\n    <A extends Action>(action: Promise<A> | A): Promise<A | void> | A | void;\r\n}\r\n\r\nexport interface MiddlewareAPI<S> {\r\n  dispatch: MiddlewareDispatch<S>;\r\n  getState(): S;\r\n}\r\n\r\nexport interface Middleware {\r\n  <S>(api: MiddlewareAPI<S>): (next: MiddlewareDispatch<S>) => MiddlewareDispatch<S>;\r\n}\r\n```\r\n\r\nThis solves the type errors for the `vanillaPromise` example, and would also solve the problems with returning void. However I'm not certain it would cover all middleware use cases.\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nI'm using redux `3.7.2` and typescript `2.5.2`. This is the first time I've tried this.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2601",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2601/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2601/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2601/events",
    "html_url": "https://github.com/reactjs/redux/issues/2601",
    "id": 255804635,
    "number": 2601,
    "title": "Long delay between reducer and subscribed function",
    "user": {
      "login": "ChaoDing-stu",
      "id": 16910973,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16910973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ChaoDing-stu",
      "html_url": "https://github.com/ChaoDing-stu",
      "followers_url": "https://api.github.com/users/ChaoDing-stu/followers",
      "following_url": "https://api.github.com/users/ChaoDing-stu/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChaoDing-stu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ChaoDing-stu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChaoDing-stu/subscriptions",
      "organizations_url": "https://api.github.com/users/ChaoDing-stu/orgs",
      "repos_url": "https://api.github.com/users/ChaoDing-stu/repos",
      "events_url": "https://api.github.com/users/ChaoDing-stu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ChaoDing-stu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-07T03:33:07Z",
    "updated_at": "2017-09-07T03:40:08Z",
    "closed_at": "2017-09-07T03:40:08Z",
    "author_association": "NONE",
    "body": "I added two console log, one is in reducer and another at the top of subscribed function. But the tim gap gets bigger and bigger when I dispatch action to run this reducer.\r\nI'm working on a map web application. This action change only the \"activeProperty\" attribute in the state. Not sure if it's redux issue or map issue. The first time it's fast, then slower, slower, slower...\r\n But in my mind no matter loop in my code(I have several console.log in the code to make sure no loop) or some delay in the map, the subscribed function should execute right after the reducer. But why not? "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2600",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2600/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2600/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2600/events",
    "html_url": "https://github.com/reactjs/redux/issues/2600",
    "id": 255264779,
    "number": 2600,
    "title": "Remove the word \"store\" from applyMiddleware.js",
    "user": {
      "login": "kennylbj",
      "id": 6435874,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6435874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kennylbj",
      "html_url": "https://github.com/kennylbj",
      "followers_url": "https://api.github.com/users/kennylbj/followers",
      "following_url": "https://api.github.com/users/kennylbj/following{/other_user}",
      "gists_url": "https://api.github.com/users/kennylbj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kennylbj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kennylbj/subscriptions",
      "organizations_url": "https://api.github.com/users/kennylbj/orgs",
      "repos_url": "https://api.github.com/users/kennylbj/repos",
      "events_url": "https://api.github.com/users/kennylbj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kennylbj/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-09-05T12:45:35Z",
    "updated_at": "2017-09-05T14:52:31Z",
    "closed_at": "2017-09-05T13:48:05Z",
    "author_association": "NONE",
    "body": "Since the definition\r\n```js\r\nlet dispatch = store.dispatch\r\n```\r\nCould I just remove the word \"store\" from [applyMiddleware.js](https://github.com/reactjs/redux/blob/master/src/applyMiddleware.js)  as below?\r\n\r\nfrom:\r\n```js\r\ndispatch = compose(...chain)(store.dispatch)\r\n```\r\n\r\nto:\r\n```js\r\ndispatch = compose(...chain)(dispatch)\r\n```\r\n\r\nIt able to pass all the tests."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2599",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2599/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2599/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2599/events",
    "html_url": "https://github.com/reactjs/redux/pull/2599",
    "id": 255150560,
    "number": 2599,
    "title": "Optimize dispatch plain object check",
    "user": {
      "login": "timdorr",
      "id": 17882,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timdorr",
      "html_url": "https://github.com/timdorr",
      "followers_url": "https://api.github.com/users/timdorr/followers",
      "following_url": "https://api.github.com/users/timdorr/following{/other_user}",
      "gists_url": "https://api.github.com/users/timdorr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timdorr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timdorr/subscriptions",
      "organizations_url": "https://api.github.com/users/timdorr/orgs",
      "repos_url": "https://api.github.com/users/timdorr/repos",
      "events_url": "https://api.github.com/users/timdorr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timdorr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 23,
    "created_at": "2017-09-05T03:26:42Z",
    "updated_at": "2017-09-06T19:49:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2599",
      "html_url": "https://github.com/reactjs/redux/pull/2599",
      "diff_url": "https://github.com/reactjs/redux/pull/2599.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2599.patch"
    },
    "body": "Closes #2598\r\n\r\nThis boosts perf by not exhaustively checking every action of it's object-ness. Dispatch is approximately 56x faster. Across a million runs of simple counter reducer:\r\n\r\n```\r\nmaster: 4690.358ms\r\nnodash: 82.821ms\r\n```\r\n\r\nI also applied the same thing in combineReducers. I believe the check is sufficient, but I'd love a second set of eyes on it.\r\n\r\nWe also no longer need to bundle any of lodash, so this saves a good number of bytes too! From the UMD build:\r\n```\r\n26715 master/redux.js\r\n21518 nodash/redux.js\r\n5761 master/redux.min.js\r\n4813 nodash/redux.min.js\r\n```\r\n\r\n![](https://media.giphy.com/media/111ebonMs90YLu/giphy.gif)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2598",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2598/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2598/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2598/events",
    "html_url": "https://github.com/reactjs/redux/issues/2598",
    "id": 255088694,
    "number": 2598,
    "title": "Using lodash.isPlainObject in dispatch has performance overhead",
    "user": {
      "login": "jayhasyee",
      "id": 20239456,
      "avatar_url": "https://avatars0.githubusercontent.com/u/20239456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jayhasyee",
      "html_url": "https://github.com/jayhasyee",
      "followers_url": "https://api.github.com/users/jayhasyee/followers",
      "following_url": "https://api.github.com/users/jayhasyee/following{/other_user}",
      "gists_url": "https://api.github.com/users/jayhasyee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jayhasyee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jayhasyee/subscriptions",
      "organizations_url": "https://api.github.com/users/jayhasyee/orgs",
      "repos_url": "https://api.github.com/users/jayhasyee/repos",
      "events_url": "https://api.github.com/users/jayhasyee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jayhasyee/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-09-04T16:55:11Z",
    "updated_at": "2017-09-05T19:47:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I just created a performance comparison between Redux and [Repatch](https://github.com/jaystack/repatch): https://github.com/jaystack/redux-repatch-performance-comparison.\r\n\r\nThis comparison dispatches a big amount of pure actions (simple increment), and I found that Redux is too slow as we expect.\r\n\r\nI discovered, that [this assertion](https://github.com/reactjs/redux/blob/master/src/createStore.js#L150) at `dispatch` causes this performance decreasing.\r\n\r\nI suggest a simpler checking, like:\r\n```javascript\r\naction && action.constructor === Object\r\n```\r\nif it's not necessary that action objects can made by `Object.create(null)`.\r\n\r\nWith this enhancing redux dispatching will be 2 magnitude faster."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2597",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2597/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2597/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2597/events",
    "html_url": "https://github.com/reactjs/redux/pull/2597",
    "id": 254583799,
    "number": 2597,
    "title": "[TypeScript] Add Dispatch default any type parameter",
    "user": {
      "login": "timwangdev",
      "id": 8013313,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8013313?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timwangdev",
      "html_url": "https://github.com/timwangdev",
      "followers_url": "https://api.github.com/users/timwangdev/followers",
      "following_url": "https://api.github.com/users/timwangdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/timwangdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timwangdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timwangdev/subscriptions",
      "organizations_url": "https://api.github.com/users/timwangdev/orgs",
      "repos_url": "https://api.github.com/users/timwangdev/repos",
      "events_url": "https://api.github.com/users/timwangdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timwangdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-09-01T09:20:29Z",
    "updated_at": "2017-09-01T16:00:33Z",
    "closed_at": "2017-09-01T16:00:33Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2597",
      "html_url": "https://github.com/reactjs/redux/pull/2597",
      "diff_url": "https://github.com/reactjs/redux/pull/2597.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2597.patch"
    },
    "body": "Since` <S>` in generic `Dispatch` is not used in its interface definition. \r\nAnd `Dispatch<any>` pattern is commonly used in TypeScript redux projects."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2596",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2596/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2596/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2596/events",
    "html_url": "https://github.com/reactjs/redux/pull/2596",
    "id": 254433856,
    "number": 2596,
    "title": "removed isRequired from todos, otherwise demo was broken",
    "user": {
      "login": "tylik1",
      "id": 741467,
      "avatar_url": "https://avatars2.githubusercontent.com/u/741467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tylik1",
      "html_url": "https://github.com/tylik1",
      "followers_url": "https://api.github.com/users/tylik1/followers",
      "following_url": "https://api.github.com/users/tylik1/following{/other_user}",
      "gists_url": "https://api.github.com/users/tylik1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tylik1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tylik1/subscriptions",
      "organizations_url": "https://api.github.com/users/tylik1/orgs",
      "repos_url": "https://api.github.com/users/tylik1/repos",
      "events_url": "https://api.github.com/users/tylik1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tylik1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-31T18:53:59Z",
    "updated_at": "2017-08-31T19:09:52Z",
    "closed_at": "2017-08-31T19:04:59Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2596",
      "html_url": "https://github.com/reactjs/redux/pull/2596",
      "diff_url": "https://github.com/reactjs/redux/pull/2596.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2596.patch"
    },
    "body": "With \"isRequired\" prop, assigned to todos, the demo will fail, as initially there are no todos, when the app starts"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2595",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2595/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2595/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2595/events",
    "html_url": "https://github.com/reactjs/redux/pull/2595",
    "id": 254352511,
    "number": 2595,
    "title": "Remove the unuse file.",
    "user": {
      "login": "ktrysmt",
      "id": 6156742,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6156742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ktrysmt",
      "html_url": "https://github.com/ktrysmt",
      "followers_url": "https://api.github.com/users/ktrysmt/followers",
      "following_url": "https://api.github.com/users/ktrysmt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ktrysmt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ktrysmt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ktrysmt/subscriptions",
      "organizations_url": "https://api.github.com/users/ktrysmt/orgs",
      "repos_url": "https://api.github.com/users/ktrysmt/repos",
      "events_url": "https://api.github.com/users/ktrysmt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ktrysmt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-31T14:23:46Z",
    "updated_at": "2017-08-31T15:21:09Z",
    "closed_at": "2017-08-31T15:21:09Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2595",
      "html_url": "https://github.com/reactjs/redux/pull/2595",
      "diff_url": "https://github.com/reactjs/redux/pull/2595.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2595.patch"
    },
    "body": "#2592."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2594",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2594/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2594/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2594/events",
    "html_url": "https://github.com/reactjs/redux/issues/2594",
    "id": 253832314,
    "number": 2594,
    "title": "real-world example does not work with node 4(update README?)",
    "user": {
      "login": "wolendranh",
      "id": 6746231,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6746231?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wolendranh",
      "html_url": "https://github.com/wolendranh",
      "followers_url": "https://api.github.com/users/wolendranh/followers",
      "following_url": "https://api.github.com/users/wolendranh/following{/other_user}",
      "gists_url": "https://api.github.com/users/wolendranh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wolendranh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wolendranh/subscriptions",
      "organizations_url": "https://api.github.com/users/wolendranh/orgs",
      "repos_url": "https://api.github.com/users/wolendranh/repos",
      "events_url": "https://api.github.com/users/wolendranh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wolendranh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-29T23:13:24Z",
    "updated_at": "2017-08-29T23:19:29Z",
    "closed_at": "2017-08-29T23:19:29Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nbug\r\n\r\nHi! the real-world example will not work with node 4. Because of related issue in [react-scripts](https://github.com/facebookincubator/create-react-app/issues/2826) Had to update to 6.0.0 on Mac machine. Maybe it is obvious but I had to spend some time to get it. Is it possible to update readme for example? I can volunteer for pull request if that's ok.\r\n\r\n(If this is a *usage question*, please **do not post it here**—post it on [Stack Overflow](http://stackoverflow.com/questions/tagged/redux) instead. If this is not a “feature” or a “bug”, or the phrase “How do I...?” applies, then it's probably a usage question.)\r\n\r\n\r\n\r\n**What is the current behavior?**\r\nexample does not work with node 4.\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n1. clone redux repo\r\n2. navigate to real-world example folder\r\n3. npm install\r\n4. npm run\r\n5. error appears\r\n```\r\n/node_modules/react-scripts/scripts/start.js:33\r\n\r\nconst {\r\n\r\n  ^\r\n\r\n\r\n\r\nSyntaxError: Unexpected token {\r\n```\r\n\r\n\r\n**What is the expected behavior?**\r\n\r\nexample is being served at localhost\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nIssue appear on master redux branch\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2593",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2593/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2593/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2593/events",
    "html_url": "https://github.com/reactjs/redux/pull/2593",
    "id": 253595028,
    "number": 2593,
    "title": "Upgrade to use react-router v4 for real-world example",
    "user": {
      "login": "roth1002",
      "id": 8485590,
      "avatar_url": "https://avatars3.githubusercontent.com/u/8485590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roth1002",
      "html_url": "https://github.com/roth1002",
      "followers_url": "https://api.github.com/users/roth1002/followers",
      "following_url": "https://api.github.com/users/roth1002/following{/other_user}",
      "gists_url": "https://api.github.com/users/roth1002/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roth1002/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roth1002/subscriptions",
      "organizations_url": "https://api.github.com/users/roth1002/orgs",
      "repos_url": "https://api.github.com/users/roth1002/repos",
      "events_url": "https://api.github.com/users/roth1002/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roth1002/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-29T09:52:17Z",
    "updated_at": "2017-08-30T04:22:11Z",
    "closed_at": "2017-08-29T14:04:55Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2593",
      "html_url": "https://github.com/reactjs/redux/pull/2593",
      "diff_url": "https://github.com/reactjs/redux/pull/2593.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2593.patch"
    },
    "body": "ref #2592 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2592",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2592/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2592/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2592/events",
    "html_url": "https://github.com/reactjs/redux/issues/2592",
    "id": 253326977,
    "number": 2592,
    "title": "Upgrade real-world example to new version of react-router",
    "user": {
      "login": "eranhirs",
      "id": 3372820,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3372820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eranhirs",
      "html_url": "https://github.com/eranhirs",
      "followers_url": "https://api.github.com/users/eranhirs/followers",
      "following_url": "https://api.github.com/users/eranhirs/following{/other_user}",
      "gists_url": "https://api.github.com/users/eranhirs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eranhirs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eranhirs/subscriptions",
      "organizations_url": "https://api.github.com/users/eranhirs/orgs",
      "repos_url": "https://api.github.com/users/eranhirs/repos",
      "events_url": "https://api.github.com/users/eranhirs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eranhirs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-28T13:20:43Z",
    "updated_at": "2017-08-31T15:22:19Z",
    "closed_at": "2017-08-31T15:22:19Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nFeature\r\n\r\n**What is the current behavior?**\r\nThis code is in `src/index.js` in `examples/real-world`:\r\n```javascript\r\nimport { browserHistory } from 'react-router'\r\n```\r\nThere is an error when using `react-router` with version 4 and above.\r\n```\r\n'react-router' does not contain an export named 'browserHistory'\r\n```\r\n\r\n**What is the expected behavior?**\r\nI think it's best to update the example to use the newer version of `react-router`."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2591",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2591/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2591/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2591/events",
    "html_url": "https://github.com/reactjs/redux/issues/2591",
    "id": 253218192,
    "number": 2591,
    "title": "Improve docs related to UI layers like React-Redux",
    "user": {
      "login": "markerikson",
      "id": 1128784,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1128784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markerikson",
      "html_url": "https://github.com/markerikson",
      "followers_url": "https://api.github.com/users/markerikson/followers",
      "following_url": "https://api.github.com/users/markerikson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markerikson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markerikson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markerikson/subscriptions",
      "organizations_url": "https://api.github.com/users/markerikson/orgs",
      "repos_url": "https://api.github.com/users/markerikson/repos",
      "events_url": "https://api.github.com/users/markerikson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markerikson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-28T03:32:26Z",
    "updated_at": "2017-08-28T03:32:26Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "We've got a section on use with React, but it feels a bit weak to me at the moment.  There's several aspects of `connect()` that aren't covered in there, like the object shorthand form of `mapDispatch`, using factory functions, and more.\r\n\r\nThe React-Redux API docs are also kept separate, and live over in the React-Redux repo itself, at https://github.com/reactjs/react-redux/blob/master/docs/api.md .  Now, I do fully agree that Redux is UI-layer agnostic, but given that React-Redux is the one \"official\" set of bindings that we maintain, I'd like to add more detail on how to actually use those correctly into our main docs.\r\n\r\nIn addition, it would be great if we could add some kind of \"Use with other UI libraries\" section that gives some details on how to use Redux with Angular, Ember, Vue, Backbone, or jQuery."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2590",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2590/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2590/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2590/events",
    "html_url": "https://github.com/reactjs/redux/issues/2590",
    "id": 253216588,
    "number": 2590,
    "title": "General docs review, consideration, and improvements",
    "user": {
      "login": "markerikson",
      "id": 1128784,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1128784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markerikson",
      "html_url": "https://github.com/markerikson",
      "followers_url": "https://api.github.com/users/markerikson/followers",
      "following_url": "https://api.github.com/users/markerikson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markerikson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markerikson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markerikson/subscriptions",
      "organizations_url": "https://api.github.com/users/markerikson/orgs",
      "repos_url": "https://api.github.com/users/markerikson/repos",
      "events_url": "https://api.github.com/users/markerikson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markerikson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-28T03:16:38Z",
    "updated_at": "2017-08-28T04:41:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The Redux docs are great, and I'm not just saying that because I wrote a couple large sections :)  However, much of the content was written right at the beginning, and while there's always been tweaks and edits from people over time, it might be worth stepping back and reviewing how they work as a whole.\r\n\r\nWhen Dan was writing the docs initially, [he said](https://twitter.com/dan_abramov/status/622568094939090944):\r\n\r\n> So hard to write the new docs. Many different audiences to cater to.  \r\n> Should make sense to: Flux beginners, FP people, FP people who don't get Flux, Flux people who don't get FP, normal JS people too  \r\n> Flux people: “is this proper Flux?” FP people: “is this that weird thing called Flux?” Normal people: “why not Backbone”  \r\n\r\n2+ years later, the situation is somewhat different.  There really are no more \"Flux beginners\", at least in terms of people who have just gotten started with a \"standard\" Flux library.  Instead, people are coming straight to Redux, including people with little actual React experience.  There's also probably less Backbone background as well, and overall the \"Flux Architecture\" is pretty well known at this point.\r\n\r\nAnother consideration is learning approach.  The current tutorial sections take a very \"from first principles\" approach.  For example, the \"Middleware\" page walks through 6 different ways to implement middleware functionality in various hack-ish ways, iterating up to the actual middleware signature.  That's great for some people, but maybe not for hours.  Are there other ways we could present things that might help some people?  Would a \"Quick Start\" section or something like that be useful?\r\n\r\nI'm _not_ proposing that we throw all the docs out and start over, but I think it's worth trying to review and rethink what we want to say and how we want to say it, similar to how Dan reworked the React docs recently-ish.\r\n\r\nI don't have any specific suggestions right this minute, but I want to solicit feedback and suggestions for any topics that we don't cover, or ways to improve what we already cover."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2589",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2589/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2589/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2589/events",
    "html_url": "https://github.com/reactjs/redux/issues/2589",
    "id": 253214328,
    "number": 2589,
    "title": "Add \"Further Information\" resource links to all doc pages",
    "user": {
      "login": "markerikson",
      "id": 1128784,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1128784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markerikson",
      "html_url": "https://github.com/markerikson",
      "followers_url": "https://api.github.com/users/markerikson/followers",
      "following_url": "https://api.github.com/users/markerikson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markerikson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markerikson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markerikson/subscriptions",
      "organizations_url": "https://api.github.com/users/markerikson/orgs",
      "repos_url": "https://api.github.com/users/markerikson/repos",
      "events_url": "https://api.github.com/users/markerikson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markerikson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-28T02:56:45Z",
    "updated_at": "2017-08-28T02:57:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "As seen in my [React/Redux links list](https://github.com/markerikson/react-redux-links), there's _tons_ of useful and relevant info about all things Redux online.  The docs themselves can only cover so much actual info, and most of it is focused on the basics.  \r\n\r\nI try to end each of my blog posts with a \"Further Information\" section that includes links mentioned earlier in the page, and also has additional links to relevant articles and resources.  I'd love it if we could add this type of info to each of our existing docs pages.\r\n\r\nAs a starting point: the \"Structuring Reducers\" docs section has a page called \"Prerequisite Concepts\" that links to some selected articles on topics like immutable data and normalization.  However, the other pages in that section don't specifically reference those links.  A few of those links could be added to the bottom of each page in the \"Structuring Reducers\" section, as appropriate.\r\n\r\nFor reference, a few of my posts:\r\n\r\n- [Idiomatic Redux: The Tao of Redux, Part 1 - Implementation and Intent](http://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-1/)\r\n- [Practical Redux, Part 6: Connected Lists, Forms, and Performance](http://blog.isquaredsoftware.com/2017/01/practical-redux-part-6-connected-lists-forms-and-performance/)\r\n- [Blogged Answers: Webpack HMR vs React-Hot-Loader](http://blog.isquaredsoftware.com/2017/08/blogged-answers-webpack-hmr-vs-rhl/)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2588",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2588/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2588/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2588/events",
    "html_url": "https://github.com/reactjs/redux/issues/2588",
    "id": 253213306,
    "number": 2588,
    "title": "Restructure \"Ecosystem\" docs page",
    "user": {
      "login": "markerikson",
      "id": 1128784,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1128784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/markerikson",
      "html_url": "https://github.com/markerikson",
      "followers_url": "https://api.github.com/users/markerikson/followers",
      "following_url": "https://api.github.com/users/markerikson/following{/other_user}",
      "gists_url": "https://api.github.com/users/markerikson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/markerikson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markerikson/subscriptions",
      "organizations_url": "https://api.github.com/users/markerikson/orgs",
      "repos_url": "https://api.github.com/users/markerikson/repos",
      "events_url": "https://api.github.com/users/markerikson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/markerikson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-28T02:46:54Z",
    "updated_at": "2017-09-15T13:32:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "The \"Ecosystem\" page is currently a bit of a scattershot list ([current version for reference](https://github.com/reactjs/redux/blob/ab5c9593bc304880c3089fc0bfcc2c3a28fd21d3/docs/introduction/Ecosystem.md)).  There's a mixture of random tutorial links, translations, bindings, middleware, and other addons.  \r\n\r\nThe page describes itself as \"staff picks\", and also that \"the Redux staff has vetted them personally\".  Really, at this point that's not exactly true.  We've had lots of people submit their own libs over time, and while someone did presumably approve each merged PR, I'm not sure we really \"vetted\" things per se.\r\n\r\nOn a similar note, there's a great quote from Andrew and Dan at https://github.com/reactjs/redux/issues/215#issuecomment-118639342:\r\n\r\n> As @gaearon said once, (I can't remember where... probably Slack) we're aiming to be like the Koa of Flux libraries. Eventually, once the community is more mature, the plan is to maintain a collection of \"blessed\" plugins and extensions, possibly under a reduxjs GitHub organization.\r\n\r\nI don't think we're going to actually maintain any additional libs at this point, but we can certainly highlight ones that are widely used or specifically interesting in some better ways.\r\n\r\nI talked with Dan at ReactRally about revamping this page.  I don't have an absolutely specific plan in mind yet, but some rough thoughts:\r\n\r\n- Move any tutorials to a separate page.  In fact, we really ought to have a separate \"Learning Resources\" docs page, and put stuff in there instead.\r\n- Review all existing links for relevance\r\n- Stop advertising \"Awesome-Redux\" at the top of the page.  It's okay to leave it in a list of \"Useful Resources\", but in my (very biased) opinion, it's a link dump that's insufficiently organized.  (FWIW, I think Dan actually suggested that change first, and Sindre Sorhus felt it was poor enough that he didn't accept it into his \"awesome-awesome\" list.)\r\n- Rebuild the list of \"blessed\" addons from scratch:\r\n  - Come up with a list of use cases or categories\r\n  - Specifically pick out 3-5 entries for each use case that we want to highlight\r\n  - For each one, give a description of what it is, why you might want to use it (or pros/cons), and hopefully even give a 10-line snippet of what using it looks like"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2587",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2587/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2587/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2587/events",
    "html_url": "https://github.com/reactjs/redux/issues/2587",
    "id": 253193438,
    "number": 2587,
    "title": "Add documentation for setting up a redux store with create-react-app",
    "user": {
      "login": "SeanPlusPlus",
      "id": 291079,
      "avatar_url": "https://avatars2.githubusercontent.com/u/291079?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SeanPlusPlus",
      "html_url": "https://github.com/SeanPlusPlus",
      "followers_url": "https://api.github.com/users/SeanPlusPlus/followers",
      "following_url": "https://api.github.com/users/SeanPlusPlus/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeanPlusPlus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SeanPlusPlus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeanPlusPlus/subscriptions",
      "organizations_url": "https://api.github.com/users/SeanPlusPlus/orgs",
      "repos_url": "https://api.github.com/users/SeanPlusPlus/repos",
      "events_url": "https://api.github.com/users/SeanPlusPlus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SeanPlusPlus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-27T22:10:05Z",
    "updated_at": "2017-08-28T01:56:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "per this thread:\r\n\r\nhttps://twitter.com/acemarke/status/901929091879841792"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2586",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2586/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2586/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2586/events",
    "html_url": "https://github.com/reactjs/redux/pull/2586",
    "id": 253160723,
    "number": 2586,
    "title": "Update FAQ: When should I learn Redux?",
    "user": {
      "login": "maxhallinan",
      "id": 3819855,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3819855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxhallinan",
      "html_url": "https://github.com/maxhallinan",
      "followers_url": "https://api.github.com/users/maxhallinan/followers",
      "following_url": "https://api.github.com/users/maxhallinan/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxhallinan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxhallinan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxhallinan/subscriptions",
      "organizations_url": "https://api.github.com/users/maxhallinan/orgs",
      "repos_url": "https://api.github.com/users/maxhallinan/repos",
      "events_url": "https://api.github.com/users/maxhallinan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxhallinan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-08-27T12:29:52Z",
    "updated_at": "2017-08-29T08:04:37Z",
    "closed_at": "2017-08-29T03:11:05Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2586",
      "html_url": "https://github.com/reactjs/redux/pull/2586",
      "diff_url": "https://github.com/reactjs/redux/pull/2586.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2586.patch"
    },
    "body": "This adds a \"When should I learn Redux?\" section to the General FAQ. The answer includes links suggested in #1785 . cc: @markerikson "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2585",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2585/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2585/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2585/events",
    "html_url": "https://github.com/reactjs/redux/pull/2585",
    "id": 252927953,
    "number": 2585,
    "title": "Fix argument inconsistency in Store.md",
    "user": {
      "login": "Elfo404",
      "id": 1170767,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1170767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Elfo404",
      "html_url": "https://github.com/Elfo404",
      "followers_url": "https://api.github.com/users/Elfo404/followers",
      "following_url": "https://api.github.com/users/Elfo404/following{/other_user}",
      "gists_url": "https://api.github.com/users/Elfo404/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Elfo404/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Elfo404/subscriptions",
      "organizations_url": "https://api.github.com/users/Elfo404/orgs",
      "repos_url": "https://api.github.com/users/Elfo404/repos",
      "events_url": "https://api.github.com/users/Elfo404/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Elfo404/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-25T14:58:10Z",
    "updated_at": "2017-08-25T15:41:13Z",
    "closed_at": "2017-08-25T15:14:54Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2585",
      "html_url": "https://github.com/reactjs/redux/pull/2585",
      "diff_url": "https://github.com/reactjs/redux/pull/2585.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2585.patch"
    },
    "body": "The argument in the title and in the arguments list should be consistent between each other"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2584",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2584/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2584/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2584/events",
    "html_url": "https://github.com/reactjs/redux/issues/2584",
    "id": 252696753,
    "number": 2584,
    "title": "Action types from passed through to subscribers would allow us to scale better",
    "user": {
      "login": "fir3pho3nixx",
      "id": 607402,
      "avatar_url": "https://avatars2.githubusercontent.com/u/607402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fir3pho3nixx",
      "html_url": "https://github.com/fir3pho3nixx",
      "followers_url": "https://api.github.com/users/fir3pho3nixx/followers",
      "following_url": "https://api.github.com/users/fir3pho3nixx/following{/other_user}",
      "gists_url": "https://api.github.com/users/fir3pho3nixx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fir3pho3nixx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fir3pho3nixx/subscriptions",
      "organizations_url": "https://api.github.com/users/fir3pho3nixx/orgs",
      "repos_url": "https://api.github.com/users/fir3pho3nixx/repos",
      "events_url": "https://api.github.com/users/fir3pho3nixx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fir3pho3nixx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-24T18:54:27Z",
    "updated_at": "2017-08-24T20:06:09Z",
    "closed_at": "2017-08-24T19:22:00Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nSubmit a PR but discuss a feature first.\r\n\r\n**What is the current behavior?**\r\n\r\nListeners that are subscribed to from an instance of the store don't have action types passed to them as a parameter when dispatch is called.\r\n\r\n**What is the expected behavior?**\r\n\r\nIt would definitely be helpful to us if we wanted to scale out our listener(or make it smarter) using action types as a parameter, the reason I say this is because I believe we can re-use our current event structure to do more focused view binding updates when it comes to angular after actions are dispatched through the store. For now we only have a single listener that will trigger a rebind for everything in the view that is bound to the store, this does not feel optimal to me. I hope to partition things using action type. We also make extensive use of reselect but I think it abstracts our scaling needs to our selectors which just does not feel right because we use this in the view for things like formatting and composition. We also debounce our listener which I am hoping this feature will give us the ability to remove at some point. \r\n\r\nThe change is here: https://github.com/fir3pho3nixx/redux/commit/764cbf5159e086417e6c09567f4099cddf7da79c\r\n\r\nLook forward to your feedback/questions.  \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2583",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2583/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2583/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2583/events",
    "html_url": "https://github.com/reactjs/redux/issues/2583",
    "id": 252615699,
    "number": 2583,
    "title": "TodoList example is broken",
    "user": {
      "login": "Svrkota-S",
      "id": 20969668,
      "avatar_url": "https://avatars2.githubusercontent.com/u/20969668?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Svrkota-S",
      "html_url": "https://github.com/Svrkota-S",
      "followers_url": "https://api.github.com/users/Svrkota-S/followers",
      "following_url": "https://api.github.com/users/Svrkota-S/following{/other_user}",
      "gists_url": "https://api.github.com/users/Svrkota-S/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Svrkota-S/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Svrkota-S/subscriptions",
      "organizations_url": "https://api.github.com/users/Svrkota-S/orgs",
      "repos_url": "https://api.github.com/users/Svrkota-S/repos",
      "events_url": "https://api.github.com/users/Svrkota-S/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Svrkota-S/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-24T14:14:42Z",
    "updated_at": "2017-08-24T15:37:40Z",
    "closed_at": "2017-08-24T15:37:40Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nBug in Todo app example on your website. (http://redux.js.org/docs/basics/ExampleTodoList.html)\r\n\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nAfter you click on item from todo list, it won't get crossed out. At the moment, if you console.log an id in mapDispatchToProps function in VisibleTodoList, you will see it is undefined:\r\n\r\n```\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTodoClick: id => {\r\n      console.log(id);\r\n      dispatch(toggleTodo(id))\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\nIn order to fix this, I had to add variable to reducers.js file that is initially set to 0 and then is incremented every time a new Todo item is added to list in order for Todo items to have unique id:\r\n\r\n```\r\n...\r\n\r\nlet counter = 0;\r\n\r\n...\r\n\r\ncase ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: counter++,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n```\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nI don't know about previous versions of React/Redux because I have just started studying React/Redux.\r\n **Browser**: Google Chrome 60.0.3112.101 (Official Build) (64-bit)\r\n**react**: 15.6.1\r\n**react-redux**: 5.0.6\r\n**redux**: 3.7.2\r\n**OS**: Windows 10\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2582",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2582/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2582/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2582/events",
    "html_url": "https://github.com/reactjs/redux/pull/2582",
    "id": 252512373,
    "number": 2582,
    "title": "Changed unsubscribe from let to const",
    "user": {
      "login": "omerts",
      "id": 4996164,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4996164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/omerts",
      "html_url": "https://github.com/omerts",
      "followers_url": "https://api.github.com/users/omerts/followers",
      "following_url": "https://api.github.com/users/omerts/following{/other_user}",
      "gists_url": "https://api.github.com/users/omerts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/omerts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omerts/subscriptions",
      "organizations_url": "https://api.github.com/users/omerts/orgs",
      "repos_url": "https://api.github.com/users/omerts/repos",
      "events_url": "https://api.github.com/users/omerts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/omerts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-24T07:32:35Z",
    "updated_at": "2017-08-24T14:06:41Z",
    "closed_at": "2017-08-24T14:06:41Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2582",
      "html_url": "https://github.com/reactjs/redux/pull/2582",
      "diff_url": "https://github.com/reactjs/redux/pull/2582.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2582.patch"
    },
    "body": "Using const is more correct since you don't want unsubscribe to be mutated"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2581",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2581/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2581/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2581/events",
    "html_url": "https://github.com/reactjs/redux/issues/2581",
    "id": 252511444,
    "number": 2581,
    "title": "All application's containers are executing when a single action of a component is dispatched",
    "user": {
      "login": "alrms",
      "id": 28054369,
      "avatar_url": "https://avatars2.githubusercontent.com/u/28054369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alrms",
      "html_url": "https://github.com/alrms",
      "followers_url": "https://api.github.com/users/alrms/followers",
      "following_url": "https://api.github.com/users/alrms/following{/other_user}",
      "gists_url": "https://api.github.com/users/alrms/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alrms/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alrms/subscriptions",
      "organizations_url": "https://api.github.com/users/alrms/orgs",
      "repos_url": "https://api.github.com/users/alrms/repos",
      "events_url": "https://api.github.com/users/alrms/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alrms/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-24T07:28:29Z",
    "updated_at": "2017-08-24T14:06:10Z",
    "closed_at": "2017-08-24T14:06:10Z",
    "author_association": "NONE",
    "body": "Hello everyone, i'm having a major issue in my application which has an impact in the application's performance. It seems that everytime i'm dispatching an action all the application's containers are executing. I've discovered this issue with the react-dev tools. My main.js file is this:\r\nimport 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, hashHistory } from 'react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Map } from 'immutable';\r\nimport moment from 'moment';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, autoRehydrate } from 'redux-persist-immutable';\r\nimport { asyncSessionStorage } from 'redux-persist/storages';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { addLocaleData } from 'react-intl';\r\nimport el from 'react-intl/locale-data/el';\r\nimport en from 'react-intl/locale-data/en';\r\nimport rootSaga from './sagas';\r\nimport rootReducer from './reducers';\r\nimport routing from './routing';\r\nimport authTokenHandler from './authTokenHandler';\r\nimport { initWebSocket,\r\n  beforeSetAlert,\r\n  deleteFromWatchlist,\r\n  requestProfChart,\r\n  setCurrentValue,\r\n  openAppropriateOrderModal,\r\n  requestProductInfo,\r\n  startTimer } from './actions';\r\nimport ModalRootContainer from './containers/ModalContainers/ModalRootContainer';\r\nimport { WATCHLISTS, DASHBOARD } from './helpers/screens';\r\nimport detectDevice from './helpers/deviceDetector';\r\nimport GlobalLoaderContainer from './containers/GlobalLoaderContainer';\r\nimport './assets/scss/style.scss';\r\n\r\n// Creation of the store with saga middleware & reducer\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n/* eslint-enable */\r\n\r\n/* eslint-disable */\r\nwindow.TNT_CDN_URL = '/idms/widget';\r\nwindow.mainInitialized = false;\r\nwindow.widgetsInitialized = false;\r\nconst AppRequire = window.require;\r\nAppRequire(['/idms/widget/main.js'], (main) => {\r\n  window.mainInitialized = true;\r\n  AppRequire([\"domReady!\", \"jquery\"],()=>{\r\n    window.widgetsInitialized = true;\r\n  });\r\n});\r\nAppRequire(['/idms_watchlist/js/config.js'], () => { });\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  Map(),\r\n  // composeEnhancers(\r\n  compose(\r\n    autoRehydrate(),\r\n    applyMiddleware(sagaMiddleware)\r\n  )\r\n);\r\n\r\n// Add the react-intl locale data for the supported languages\r\naddLocaleData([...el, ...en]);\r\n\r\n// set moment locale for dates\r\nmoment.locale('el');\r\n\r\n// Persist the store and start the application.\r\npersistStore(store,\r\n  // No special config for the store persistence\r\n  // undefined,\r\n  { storage: asyncSessionStorage },\r\n  () => {\r\n    // TODO find how to handle rehydration error\r\n    sagaMiddleware.run(rootSaga);\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <Router\r\n          onUpdate={() => window.scrollTo(0, 0)}\r\n          history={hashHistory}\r\n        >\r\n          {routing(store)}\r\n        </Router>\r\n      </Provider>,\r\n      document.getElementById('root')\r\n    );\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <ModalRootContainer />\r\n      </Provider>,\r\n      document.getElementById('modals')\r\n    );\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <GlobalLoaderContainer />\r\n      </Provider>,\r\n      document.getElementById('global-loading')\r\n    );\r\n    if (authTokenHandler.getAuthToken()) {\r\n      // when page is refreshed re-initialize the stomp client\r\n      store.dispatch(initWebSocket());\r\n      store.dispatch(startTimer());\r\n    }\r\n  }\r\n);\r\n\r\nDo you have any ideas why is this happening? Is this a fault of my application's architecure? Thanks a lot"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2580",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2580/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2580/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2580/events",
    "html_url": "https://github.com/reactjs/redux/pull/2580",
    "id": 252480019,
    "number": 2580,
    "title": "Update FAQ.md",
    "user": {
      "login": "seoyunho",
      "id": 22070720,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22070720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seoyunho",
      "html_url": "https://github.com/seoyunho",
      "followers_url": "https://api.github.com/users/seoyunho/followers",
      "following_url": "https://api.github.com/users/seoyunho/following{/other_user}",
      "gists_url": "https://api.github.com/users/seoyunho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seoyunho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seoyunho/subscriptions",
      "organizations_url": "https://api.github.com/users/seoyunho/orgs",
      "repos_url": "https://api.github.com/users/seoyunho/repos",
      "events_url": "https://api.github.com/users/seoyunho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seoyunho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-24T03:55:02Z",
    "updated_at": "2017-08-24T06:04:16Z",
    "closed_at": "2017-08-24T06:04:16Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2580",
      "html_url": "https://github.com/reactjs/redux/pull/2580",
      "diff_url": "https://github.com/reactjs/redux/pull/2580.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2580.patch"
    },
    "body": "Grammar error :) 👍 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2579",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2579/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2579/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2579/events",
    "html_url": "https://github.com/reactjs/redux/pull/2579",
    "id": 252421677,
    "number": 2579,
    "title": "Add redux-data-structures to Ecosystem",
    "user": {
      "login": "adrienjt",
      "id": 13746446,
      "avatar_url": "https://avatars1.githubusercontent.com/u/13746446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adrienjt",
      "html_url": "https://github.com/adrienjt",
      "followers_url": "https://api.github.com/users/adrienjt/followers",
      "following_url": "https://api.github.com/users/adrienjt/following{/other_user}",
      "gists_url": "https://api.github.com/users/adrienjt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adrienjt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adrienjt/subscriptions",
      "organizations_url": "https://api.github.com/users/adrienjt/orgs",
      "repos_url": "https://api.github.com/users/adrienjt/repos",
      "events_url": "https://api.github.com/users/adrienjt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adrienjt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-23T21:26:37Z",
    "updated_at": "2017-08-24T06:03:33Z",
    "closed_at": "2017-08-24T06:03:29Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2579",
      "html_url": "https://github.com/reactjs/redux/pull/2579",
      "diff_url": "https://github.com/reactjs/redux/pull/2579.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2579.patch"
    },
    "body": "I wonder if you all would consider [redux-data-structures](https://redux-data-structures.js.org/) as a \"staff pick\". I got good feedback on it (and 85 stars on GitHub so far)."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2578",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2578/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2578/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2578/events",
    "html_url": "https://github.com/reactjs/redux/issues/2578",
    "id": 252325554,
    "number": 2578,
    "title": "I give the initialState in createStore and then combineReducers show one of my reducers returned undefined during initialization",
    "user": {
      "login": "ElonXun",
      "id": 26102596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/26102596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ElonXun",
      "html_url": "https://github.com/ElonXun",
      "followers_url": "https://api.github.com/users/ElonXun/followers",
      "following_url": "https://api.github.com/users/ElonXun/following{/other_user}",
      "gists_url": "https://api.github.com/users/ElonXun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ElonXun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ElonXun/subscriptions",
      "organizations_url": "https://api.github.com/users/ElonXun/orgs",
      "repos_url": "https://api.github.com/users/ElonXun/repos",
      "events_url": "https://api.github.com/users/ElonXun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ElonXun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-23T15:32:54Z",
    "updated_at": "2017-08-23T16:46:31Z",
    "closed_at": "2017-08-23T16:46:31Z",
    "author_association": "NONE",
    "body": "in reducers:\r\n```\r\nconst todoBlog = combineReducers({\r\n  blogTypeVisibilityFilter,\r\n  blogs\r\n})\r\n```\r\nin blogTypeVisibilityFilter:\r\n```\r\nconst blogTypeVisibilityFilter = (state, action)=>{\r\n  switch (action.type) {\r\n    case 'BLOG_TYPE_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default blogTypeVisibilityFilter;\r\n```\r\nin blogs:\r\n```\r\nconst blogs = (state,action)=>{\r\n  return state\r\n}\r\n```\r\nin createStore:\r\n```\r\nconst initialState = {\r\n  blogTypeVisibilityFilter:'SHOW_ALL_BLOG',\r\n  blogs:data.data,\r\n}\r\n\r\nconst store = createStore(reducer,initialState,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n```\r\nand then it shows wrong:\r\n\r\n> Reducer \"blogTypeVisibilityFilter\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.\r\n\r\nbut when i just change \r\n```\r\nconst todoBlog = combineReducers({\r\n  blogTypeVisibilityFilter,\r\n  blogs\r\n})\r\n```\r\nto \r\n```\r\nconst todoBlog = (state={},action)=>{\r\n  return{\r\n    blogTypeVisibilityFilter:blogTypeVisibilityFilter(state.blogTypeVisibilityFilter,action),\r\n    blogs:blogs(state.blogs,action)\r\n  }\r\n}\r\n```\r\nin reducers  it runs well and without any errors\r\n\r\nwhy i use combineReducers it goes wrong? \r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2577",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2577/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2577/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2577/events",
    "html_url": "https://github.com/reactjs/redux/issues/2577",
    "id": 252268477,
    "number": 2577,
    "title": "bindActionCreator should return the result of the dispatch call",
    "user": {
      "login": "hoegertn",
      "id": 1287829,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1287829?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hoegertn",
      "html_url": "https://github.com/hoegertn",
      "followers_url": "https://api.github.com/users/hoegertn/followers",
      "following_url": "https://api.github.com/users/hoegertn/following{/other_user}",
      "gists_url": "https://api.github.com/users/hoegertn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hoegertn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hoegertn/subscriptions",
      "organizations_url": "https://api.github.com/users/hoegertn/orgs",
      "repos_url": "https://api.github.com/users/hoegertn/repos",
      "events_url": "https://api.github.com/users/hoegertn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hoegertn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-23T12:45:00Z",
    "updated_at": "2017-08-23T13:38:29Z",
    "closed_at": "2017-08-23T13:00:51Z",
    "author_association": "NONE",
    "body": "Currently, the bindActionCreator is not returning the result of the wrapped function. This leads to promises being swallowed and the original caller is not able to handle errors properly.\r\n\r\nEspecially for redux-form, this would be great, as the errors can then be forwarded to the Form validation.\r\n\r\nThis can be fixed by changing\r\n\r\n```\r\nfunction bindActionCreator(actionCreator, dispatch) {\r\n  return (...args) => dispatch(actionCreator(...args))\r\n}\r\n```\r\n\r\nto\r\n\r\n```\r\nfunction bindActionCreator(actionCreator, dispatch) {\r\n  return (...args) => return dispatch(actionCreator(...args))\r\n}\r\n```\r\n\r\nThis happens with the latest version of redux.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2576",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2576/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2576/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2576/events",
    "html_url": "https://github.com/reactjs/redux/issues/2576",
    "id": 252176252,
    "number": 2576,
    "title": "My function is not dispatching the action to the store!",
    "user": {
      "login": "Parthjhaveri",
      "id": 13788076,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13788076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Parthjhaveri",
      "html_url": "https://github.com/Parthjhaveri",
      "followers_url": "https://api.github.com/users/Parthjhaveri/followers",
      "following_url": "https://api.github.com/users/Parthjhaveri/following{/other_user}",
      "gists_url": "https://api.github.com/users/Parthjhaveri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Parthjhaveri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Parthjhaveri/subscriptions",
      "organizations_url": "https://api.github.com/users/Parthjhaveri/orgs",
      "repos_url": "https://api.github.com/users/Parthjhaveri/repos",
      "events_url": "https://api.github.com/users/Parthjhaveri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Parthjhaveri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-23T06:40:09Z",
    "updated_at": "2017-08-23T13:32:01Z",
    "closed_at": "2017-08-23T13:32:01Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\n(If this is a *usage question*, please **do not post it here**—post it on [Stack Overflow](http://stackoverflow.com/questions/tagged/redux) instead. If this is not a “feature” or a “bug”, or the phrase “How do I...?” applies, then it's probably a usage question.)\r\n\r\n\r\n\r\n**What is the current behavior?**\r\nThe current behavior is that I have my reducer and actions setup- the entire React/Redux app is rendering, however since i have an action being dispatched in a handleClick function, it is not dispatching the action to the store--- it instead gives me this error: `'TypeError: Cannot read property 'dispatch' of undefined` every time i click on the div that triggers the handleClick function.\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\nThe expected behavior is that my function should dispatch my action to the store and log to the console what ever i have, while updating the state. \r\n\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2575",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2575/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2575/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2575/events",
    "html_url": "https://github.com/reactjs/redux/pull/2575",
    "id": 251894600,
    "number": 2575,
    "title": "TodoMVC example: add items in the correct order",
    "user": {
      "login": "mathiasbynens",
      "id": 81942,
      "avatar_url": "https://avatars1.githubusercontent.com/u/81942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mathiasbynens",
      "html_url": "https://github.com/mathiasbynens",
      "followers_url": "https://api.github.com/users/mathiasbynens/followers",
      "following_url": "https://api.github.com/users/mathiasbynens/following{/other_user}",
      "gists_url": "https://api.github.com/users/mathiasbynens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mathiasbynens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mathiasbynens/subscriptions",
      "organizations_url": "https://api.github.com/users/mathiasbynens/orgs",
      "repos_url": "https://api.github.com/users/mathiasbynens/repos",
      "events_url": "https://api.github.com/users/mathiasbynens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mathiasbynens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-22T09:30:55Z",
    "updated_at": "2017-08-22T15:48:48Z",
    "closed_at": "2017-08-22T14:28:00Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2575",
      "html_url": "https://github.com/reactjs/redux/pull/2575",
      "diff_url": "https://github.com/reactjs/redux/pull/2575.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2575.patch"
    },
    "body": "New TODO items must be added to the bottom instead of at the top.\r\n\r\nCloses #2574."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2574",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2574/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2574/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2574/events",
    "html_url": "https://github.com/reactjs/redux/issues/2574",
    "id": 251890531,
    "number": 2574,
    "title": "TodoMVC example: items are in the wrong order",
    "user": {
      "login": "mathiasbynens",
      "id": 81942,
      "avatar_url": "https://avatars1.githubusercontent.com/u/81942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mathiasbynens",
      "html_url": "https://github.com/mathiasbynens",
      "followers_url": "https://api.github.com/users/mathiasbynens/followers",
      "following_url": "https://api.github.com/users/mathiasbynens/following{/other_user}",
      "gists_url": "https://api.github.com/users/mathiasbynens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mathiasbynens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mathiasbynens/subscriptions",
      "organizations_url": "https://api.github.com/users/mathiasbynens/orgs",
      "repos_url": "https://api.github.com/users/mathiasbynens/repos",
      "events_url": "https://api.github.com/users/mathiasbynens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mathiasbynens/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-22T09:16:56Z",
    "updated_at": "2017-08-22T14:28:00Z",
    "closed_at": "2017-08-22T14:28:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "In `examples/todomvc`, new TODO items are added to the top instead of at the bottom.\r\n\r\nNew items should be added to the bottom instead, to be consistent with every other TodoMVC example (e.g. [React](http://todomvc.com/examples/react/)) and to allow for easier comparison."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2573",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2573/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2573/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2573/events",
    "html_url": "https://github.com/reactjs/redux/pull/2573",
    "id": 251504773,
    "number": 2573,
    "title": "Spelling error",
    "user": {
      "login": "PashaSchool",
      "id": 24788713,
      "avatar_url": "https://avatars2.githubusercontent.com/u/24788713?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PashaSchool",
      "html_url": "https://github.com/PashaSchool",
      "followers_url": "https://api.github.com/users/PashaSchool/followers",
      "following_url": "https://api.github.com/users/PashaSchool/following{/other_user}",
      "gists_url": "https://api.github.com/users/PashaSchool/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PashaSchool/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PashaSchool/subscriptions",
      "organizations_url": "https://api.github.com/users/PashaSchool/orgs",
      "repos_url": "https://api.github.com/users/PashaSchool/repos",
      "events_url": "https://api.github.com/users/PashaSchool/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PashaSchool/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-20T18:10:24Z",
    "updated_at": "2017-08-20T19:10:55Z",
    "closed_at": "2017-08-20T19:10:55Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2573",
      "html_url": "https://github.com/reactjs/redux/pull/2573",
      "diff_url": "https://github.com/reactjs/redux/pull/2573.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2573.patch"
    },
    "body": "just simple error where this word 'naїve' should look like this 'native'"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2572",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2572/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2572/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2572/events",
    "html_url": "https://github.com/reactjs/redux/issues/2572",
    "id": 251492640,
    "number": 2572,
    "title": "is there a way to turn off Unexpected key warning in combineReducers",
    "user": {
      "login": "magicdawn",
      "id": 4067115,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4067115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magicdawn",
      "html_url": "https://github.com/magicdawn",
      "followers_url": "https://api.github.com/users/magicdawn/followers",
      "following_url": "https://api.github.com/users/magicdawn/following{/other_user}",
      "gists_url": "https://api.github.com/users/magicdawn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magicdawn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magicdawn/subscriptions",
      "organizations_url": "https://api.github.com/users/magicdawn/orgs",
      "repos_url": "https://api.github.com/users/magicdawn/repos",
      "events_url": "https://api.github.com/users/magicdawn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magicdawn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-20T14:39:49Z",
    "updated_at": "2017-08-20T17:14:50Z",
    "closed_at": "2017-08-20T17:14:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nI use reduceReducers https://github.com/acdlite/reduce-reducers to combine multiple top level reducer, and redux.combineReducer to combine multiple partial reducer to a top level reducer\r\n\r\nexample\r\nhttps://github.com/magicdawn/redux-standard-reducer/blob/master/test/simple.js#L10-L22\r\nhttps://github.com/magicdawn/redux-standard-reducer/blob/master/test/simple.js#L89-L95\r\n\r\n\r\n**What is the current behavior?**\r\nAnd I got this warning\r\nUnexpected key \"arr\" found in previous state received by the reducer. Expected to find one of the known reducer keys instead: \"partial1\", \"partial2\". Unexpected keys will be ignored.\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\nhttps://github.com/reactjs/redux/blob/master/src/combineReducers.js#L16-L55\r\n\r\nshould Have a way to turn off this warning.  As I see, with help of unexpectedKeyCache, I just get warn once per key. but when I use \r\n\r\n```\r\ncombineReducers({ group1: function(){ }, ... })\r\ncombineReducers({ group2: function(){ }, ... })\r\n```\r\n\r\nI'll get lots of warning, so I suggest add an option in `combineReducers` method, and defaults to true, do not influence current behavior and this warning can be turn off.\r\n\r\n\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\n- redux@3.7.2\r\n- on nodejs@7.6.0, not in a browser env\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2571",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2571/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2571/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2571/events",
    "html_url": "https://github.com/reactjs/redux/pull/2571",
    "id": 251491885,
    "number": 2571,
    "title": "Annotate action.js headings",
    "user": {
      "login": "stevekinney",
      "id": 251000,
      "avatar_url": "https://avatars3.githubusercontent.com/u/251000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevekinney",
      "html_url": "https://github.com/stevekinney",
      "followers_url": "https://api.github.com/users/stevekinney/followers",
      "following_url": "https://api.github.com/users/stevekinney/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevekinney/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevekinney/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevekinney/subscriptions",
      "organizations_url": "https://api.github.com/users/stevekinney/orgs",
      "repos_url": "https://api.github.com/users/stevekinney/repos",
      "events_url": "https://api.github.com/users/stevekinney/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevekinney/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-20T14:28:11Z",
    "updated_at": "2017-08-20T17:08:44Z",
    "closed_at": "2017-08-20T17:08:44Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2571",
      "html_url": "https://github.com/reactjs/redux/pull/2571",
      "diff_url": "https://github.com/reactjs/redux/pull/2571.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2571.patch"
    },
    "body": "As it stands, there are multiple headings entitled `action.js`. On the official docs page, it offers a anchor to each heading, but this doesn't work because it will just match the `id` of the first `#### action.js` heading. This change adds some context, which will—in turn—make each heading unique."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2570",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2570/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2570/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2570/events",
    "html_url": "https://github.com/reactjs/redux/pull/2570",
    "id": 251449558,
    "number": 2570,
    "title": "Improve note about WordPress framework",
    "user": {
      "login": "m4sk1n",
      "id": 21127288,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21127288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m4sk1n",
      "html_url": "https://github.com/m4sk1n",
      "followers_url": "https://api.github.com/users/m4sk1n/followers",
      "following_url": "https://api.github.com/users/m4sk1n/following{/other_user}",
      "gists_url": "https://api.github.com/users/m4sk1n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m4sk1n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m4sk1n/subscriptions",
      "organizations_url": "https://api.github.com/users/m4sk1n/orgs",
      "repos_url": "https://api.github.com/users/m4sk1n/repos",
      "events_url": "https://api.github.com/users/m4sk1n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m4sk1n/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-19T21:01:37Z",
    "updated_at": "2017-08-19T22:20:07Z",
    "closed_at": "2017-08-19T22:19:54Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2570",
      "html_url": "https://github.com/reactjs/redux/pull/2570",
      "diff_url": "https://github.com/reactjs/redux/pull/2570.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2570.patch"
    },
    "body": "The current one looks like it's implementation of Redux library for WordPress (which has no sense…)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2569",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2569/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2569/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2569/events",
    "html_url": "https://github.com/reactjs/redux/pull/2569",
    "id": 251428668,
    "number": 2569,
    "title": "Added missing comma",
    "user": {
      "login": "stefangeneralao",
      "id": 25986603,
      "avatar_url": "https://avatars2.githubusercontent.com/u/25986603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefangeneralao",
      "html_url": "https://github.com/stefangeneralao",
      "followers_url": "https://api.github.com/users/stefangeneralao/followers",
      "following_url": "https://api.github.com/users/stefangeneralao/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefangeneralao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefangeneralao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefangeneralao/subscriptions",
      "organizations_url": "https://api.github.com/users/stefangeneralao/orgs",
      "repos_url": "https://api.github.com/users/stefangeneralao/repos",
      "events_url": "https://api.github.com/users/stefangeneralao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefangeneralao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-19T14:32:42Z",
    "updated_at": "2017-08-20T17:11:59Z",
    "closed_at": "2017-08-20T17:05:24Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2569",
      "html_url": "https://github.com/reactjs/redux/pull/2569",
      "diff_url": "https://github.com/reactjs/redux/pull/2569.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2569.patch"
    },
    "body": "Added missing comma to example."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2568",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2568/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2568/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2568/events",
    "html_url": "https://github.com/reactjs/redux/issues/2568",
    "id": 251334892,
    "number": 2568,
    "title": "Storing a File type object in store doesn't save it entirely",
    "user": {
      "login": "johhansantana",
      "id": 9933887,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9933887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johhansantana",
      "html_url": "https://github.com/johhansantana",
      "followers_url": "https://api.github.com/users/johhansantana/followers",
      "following_url": "https://api.github.com/users/johhansantana/following{/other_user}",
      "gists_url": "https://api.github.com/users/johhansantana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johhansantana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johhansantana/subscriptions",
      "organizations_url": "https://api.github.com/users/johhansantana/orgs",
      "repos_url": "https://api.github.com/users/johhansantana/repos",
      "events_url": "https://api.github.com/users/johhansantana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johhansantana/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-18T19:16:08Z",
    "updated_at": "2017-08-18T20:24:22Z",
    "closed_at": "2017-08-18T20:24:22Z",
    "author_association": "NONE",
    "body": "I'm trying to upload a blob/file type object with the following information\r\n\r\n![image](https://user-images.githubusercontent.com/9933887/29474054-0a476ffe-8428-11e7-81c1-08ec4ff51f33.png)\r\n\r\nBut when I save/store this in redux the only thing that gets saved is the `preview` property.\r\n\r\nIs there  a way to get the whole blob/file to be saved in redux store/state?"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2567",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2567/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2567/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2567/events",
    "html_url": "https://github.com/reactjs/redux/issues/2567",
    "id": 251088511,
    "number": 2567,
    "title": "Documentation Basics on Reducers: combineReducers is NOT equivalent to custom reducer",
    "user": {
      "login": "Reliot",
      "id": 22105352,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22105352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Reliot",
      "html_url": "https://github.com/Reliot",
      "followers_url": "https://api.github.com/users/Reliot/followers",
      "following_url": "https://api.github.com/users/Reliot/following{/other_user}",
      "gists_url": "https://api.github.com/users/Reliot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Reliot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Reliot/subscriptions",
      "organizations_url": "https://api.github.com/users/Reliot/orgs",
      "repos_url": "https://api.github.com/users/Reliot/repos",
      "events_url": "https://api.github.com/users/Reliot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Reliot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-17T22:19:57Z",
    "updated_at": "2017-08-18T02:51:21Z",
    "closed_at": "2017-08-17T22:57:18Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nI'd like to point out a small, but important slopiness in the documentation.\r\n\r\nThe [documentation about reducer basics](http://redux.js.org/docs/basics/Reducers.html) tells us, that the following two reducers would be equivalent. (I renamed them for sample's sake).\r\n\r\n    import { combineReducers } from 'redux'\r\n    \r\n    const todoAppByCombine = combineReducers({\r\n      visibilityFilter,\r\n      todos\r\n    })\r\n    \r\n    default function todoAppCustom(state = {}, action) {\r\n     return {\r\n        visibilityFilter: visibilityFilter(state.visibilityFilter, action),\r\n        todos: todos(state.todos, action)\r\n      }\r\n    }\r\n\r\nBut in fact, they are not, since the custom implementation will change the state even if nothing changed.\r\n\r\n    const undefinedAction = { type: undefined};\r\n\r\n    var firstState = todoAppCustom( undefined, undefinedAction);\r\n    var secondState = todoAppCustom( firstState, undefinedAction);\r\n    \r\n    console.log( firstState === secondState); // prints false\r\n\r\n    var firstState = todoAppByCombine ( undefined, undefinedAction);\r\n    var secondState = todoAppByCombine ( firstState, undefinedAction);\r\n    \r\n    console.log( firstState === secondState); // prints true\r\n\r\nI think, this is quite an important detail. The documentation mentions further, that combineReducers will not yield a new object, if nothing changed, but i think it's important enough to mention, that the functions are not equivalent."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2566",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2566/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2566/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2566/events",
    "html_url": "https://github.com/reactjs/redux/issues/2566",
    "id": 250979898,
    "number": 2566,
    "title": "Performance issues with Redux and Three.js",
    "user": {
      "login": "lysigk",
      "id": 13220138,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13220138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lysigk",
      "html_url": "https://github.com/lysigk",
      "followers_url": "https://api.github.com/users/lysigk/followers",
      "following_url": "https://api.github.com/users/lysigk/following{/other_user}",
      "gists_url": "https://api.github.com/users/lysigk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lysigk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lysigk/subscriptions",
      "organizations_url": "https://api.github.com/users/lysigk/orgs",
      "repos_url": "https://api.github.com/users/lysigk/repos",
      "events_url": "https://api.github.com/users/lysigk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lysigk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-17T15:18:45Z",
    "updated_at": "2017-08-17T16:18:38Z",
    "closed_at": "2017-08-17T15:44:44Z",
    "author_association": "NONE",
    "body": "I am currently trying to figure out a way of using Redux for state management and event handling in a Three.js-based game.\r\n\r\nMy idea was to use a render function that dispatches an 'UPDATE' action in it's requestAnimationFrame() callback. The render function is also subscribed to the Redux store so it gets called after the state has been updated.\r\n\r\nWhile this way of updating and rendering seems to work fine, some serious performance issues occur as soon as another mouse-triggered action ('CHANGE_MATERIAL' in my example) gets dispatched. Every time 'CHANGE_MATERIAL' is dispatched the framerate sinks a bit and CPU usage goes up. This doesn't go back to normal after a while, it just stays like this and gets worse with every click.\r\n\r\nI have isolated the problem into this [gist](https://gist.github.com/lysigk/cf86b8c78ec2e18e9d1d0f42a182bdf2) and this [fiddle](https://jsfiddle.net/lysigk/82qg2n0p/).\r\n\r\nThis problem occurs with using Redux v3.7.2 and Three.js v0.86.0. \r\n\r\n**EDIT: After further investigation this doesn't seem to be a Redux related bug, so I'm closing this issue.**"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2565",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2565/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2565/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2565/events",
    "html_url": "https://github.com/reactjs/redux/issues/2565",
    "id": 250961554,
    "number": 2565,
    "title": "Is this change ok?",
    "user": {
      "login": "Runrioter",
      "id": 1078011,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1078011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Runrioter",
      "html_url": "https://github.com/Runrioter",
      "followers_url": "https://api.github.com/users/Runrioter/followers",
      "following_url": "https://api.github.com/users/Runrioter/following{/other_user}",
      "gists_url": "https://api.github.com/users/Runrioter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Runrioter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Runrioter/subscriptions",
      "organizations_url": "https://api.github.com/users/Runrioter/orgs",
      "repos_url": "https://api.github.com/users/Runrioter/repos",
      "events_url": "https://api.github.com/users/Runrioter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Runrioter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-17T14:23:13Z",
    "updated_at": "2017-08-17T14:52:36Z",
    "closed_at": "2017-08-17T14:41:54Z",
    "author_association": "NONE",
    "body": "https://github.com/reactjs/redux/blob/f267dd02d19c2ede88e37b8a73cc0b0b63413be2/src/applyMiddleware.js#L25-L28\r\n\r\nBelow is ok?\r\n```javascript\r\nconst middlewareAPI = {\r\n  getState: store.getState, \r\n  dispatch\r\n} \r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2564",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2564/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2564/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2564/events",
    "html_url": "https://github.com/reactjs/redux/pull/2564",
    "id": 250942429,
    "number": 2564,
    "title": "indent the comment",
    "user": {
      "login": "magicdawn",
      "id": 4067115,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4067115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/magicdawn",
      "html_url": "https://github.com/magicdawn",
      "followers_url": "https://api.github.com/users/magicdawn/followers",
      "following_url": "https://api.github.com/users/magicdawn/following{/other_user}",
      "gists_url": "https://api.github.com/users/magicdawn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/magicdawn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/magicdawn/subscriptions",
      "organizations_url": "https://api.github.com/users/magicdawn/orgs",
      "repos_url": "https://api.github.com/users/magicdawn/repos",
      "events_url": "https://api.github.com/users/magicdawn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/magicdawn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-17T13:23:43Z",
    "updated_at": "2017-08-18T03:34:19Z",
    "closed_at": "2017-08-17T13:58:06Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2564",
      "html_url": "https://github.com/reactjs/redux/pull/2564",
      "diff_url": "https://github.com/reactjs/redux/pull/2564.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2564.patch"
    },
    "body": "dummy indent"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2563",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2563/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2563/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2563/events",
    "html_url": "https://github.com/reactjs/redux/pull/2563",
    "id": 250743738,
    "number": 2563,
    "title": "Revamp TypeScript typing with more type safety",
    "user": {
      "login": "pelotom",
      "id": 128019,
      "avatar_url": "https://avatars2.githubusercontent.com/u/128019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pelotom",
      "html_url": "https://github.com/pelotom",
      "followers_url": "https://api.github.com/users/pelotom/followers",
      "following_url": "https://api.github.com/users/pelotom/following{/other_user}",
      "gists_url": "https://api.github.com/users/pelotom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pelotom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pelotom/subscriptions",
      "organizations_url": "https://api.github.com/users/pelotom/orgs",
      "repos_url": "https://api.github.com/users/pelotom/repos",
      "events_url": "https://api.github.com/users/pelotom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pelotom/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-08-16T20:05:30Z",
    "updated_at": "2017-09-17T08:41:41Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2563",
      "html_url": "https://github.com/reactjs/redux/pull/2563",
      "diff_url": "https://github.com/reactjs/redux/pull/2563.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2563.patch"
    },
    "body": "This fixes many issues with the current TypeScript typings, while remaining mostly* backwards compatible:\r\n\r\n- Add a type parameter to `Action` tracking the type of the `type` tag.\r\n- Stop using the irrelevant state type param on `Dispatch` (but keep it around for backwards compatibility).\r\n- Add a type parameter to `Dispatch` which is the type of things which may be dispatched (previously `Dispatch` had a polymorphic apply which allowed anything to be dispatched).\r\n- Add type parameters `A` and `N` to `Store` which respectively track the actions it may dispatch and all other non-action things which may be dispatched. Then its `dispatch` method can take `A | N`.\r\n- Add a type parameter `A` to `Reducer` which tracks the actions it understands, instead of just using `AnyAction`.\r\n- Use [type parameter defaulting](https://blog.mariusschulz.com/2017/06/02/typescript-2-3-generic-parameter-defaults) everywhere to make this as backwards-compatible as possible.\r\n\r\nWith these changes, type inference for a lot of redux functions improves dramatically, and thus we get more type safety with less effort. I won't pretend these are perfect; in particular I think the middleware/enhancer functions could use some work to make the `N` variables accumulate as appropriate, but it's hopefully a step in the right direction.\r\n\r\nAs part of this, upgraded the TypeScript dependency to `^2.4.2`.\r\n\r\n\\* As you can see from some of the modified testcases, in a few rare cases it's necessary to modify type parameter annotations, e.g. when calling `combineReducers`."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2562",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2562/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2562/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2562/events",
    "html_url": "https://github.com/reactjs/redux/issues/2562",
    "id": 250731233,
    "number": 2562,
    "title": "How can i do ajax call each time when store gets updated ?",
    "user": {
      "login": "mohandere",
      "id": 3479822,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3479822?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mohandere",
      "html_url": "https://github.com/mohandere",
      "followers_url": "https://api.github.com/users/mohandere/followers",
      "following_url": "https://api.github.com/users/mohandere/following{/other_user}",
      "gists_url": "https://api.github.com/users/mohandere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mohandere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mohandere/subscriptions",
      "organizations_url": "https://api.github.com/users/mohandere/orgs",
      "repos_url": "https://api.github.com/users/mohandere/repos",
      "events_url": "https://api.github.com/users/mohandere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mohandere/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-16T19:17:35Z",
    "updated_at": "2017-08-16T20:38:02Z",
    "closed_at": "2017-08-16T20:38:02Z",
    "author_association": "NONE",
    "body": "How can i do ajax call each time when store gets updated ?\r\n\r\nBasically i want to fetch products with new api params, let say there is a dropdown for items per page.  it working fine on load i.e on call of method `componentWillMount`\r\n\r\n**But not sure how to do fetch again on store change.**\r\n \r\n\r\n```javascript\r\nimport React, { Component } from 'react';\r\nimport ProductsList from '../components/ProductsList'\r\nimport { connect } from 'react-redux'\r\n// Action Creators\r\nimport doFetchProducts from '../actions/doFetchProducts'\r\nimport queryString from 'query-string'\r\n\r\nclass Products extends Component {\r\n\r\n   constructor (props) {\r\n     super(props);\r\n   }\r\n\r\n   componentWillMount () {\r\n    this.fetch()\r\n  }\r\n\r\n  fetch () {\r\n\r\n    let q = queryString.stringify({\r\n      categories: 'rings',\r\n      'attributes.Style': 'Classic',\r\n      limit: this.props.applyItemsPerPage,\r\n      page: 1,\r\n      status: 'Active'\r\n    })\r\n\r\n    this.props.dispatch(\r\n      doFetchProducts(q)\r\n    )\r\n  }\r\n\r\n   render() {\r\n\r\n    return (\r\n      <section className=\"content\">\r\n        <ProductsList {...this.props} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.applyFetchProducts.products,\r\n    isLoading: state.applyFetchProducts.isLoading,\r\n    itemsPerPage: state.applyItemsPerPage\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Products);\r\n\r\n```\r\n\r\nThanks in advance.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2561",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2561/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2561/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2561/events",
    "html_url": "https://github.com/reactjs/redux/issues/2561",
    "id": 250602703,
    "number": 2561,
    "title": "Function createStorage changes type of state element",
    "user": {
      "login": "avkis",
      "id": 14841869,
      "avatar_url": "https://avatars0.githubusercontent.com/u/14841869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/avkis",
      "html_url": "https://github.com/avkis",
      "followers_url": "https://api.github.com/users/avkis/followers",
      "following_url": "https://api.github.com/users/avkis/following{/other_user}",
      "gists_url": "https://api.github.com/users/avkis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/avkis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/avkis/subscriptions",
      "organizations_url": "https://api.github.com/users/avkis/orgs",
      "repos_url": "https://api.github.com/users/avkis/repos",
      "events_url": "https://api.github.com/users/avkis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/avkis/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-08-16T12:01:59Z",
    "updated_at": "2017-08-16T13:26:52Z",
    "closed_at": "2017-08-16T13:26:52Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nI think that behavior is a *bug*.\r\n\r\n**What is the current behavior?**\r\n\r\nExample:\r\n```\r\nimport {  createStore } from 'redux';\r\n\r\nfunction postsReducer(state, action) {\r\n  console.log('The post will be changed.');\r\n  return state;\r\n}\r\n\r\nconst posts = [{\r\n  \"code\": \"BAcyDyQwcXX\",\r\n  \"caption\": \"Lunch #hamont\",\r\n  \"likes\": 56,\r\n  \"id\": \"1161022966406956503\",\r\n  \"display_src\": \"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e35/12552326_495932673919321_1443393332_n.jpg\"\r\n}, {\r\n  \"code\": \"BAcJeJrQca9\",\r\n  \"caption\": \"Snow! ⛄️🌨❄️ #lifewithsnickers\",\r\n  \"likes\": 59,\r\n  \"id\": \"1160844458347054781\",\r\n  \"display_src\": \"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e35/12407344_1283694208323785_735653395_n.jpg\"\r\n}];\r\n\r\nconst defaultState = {\r\n  posts\r\n};\r\n\r\n```\r\n\r\n**Current behavior:** \r\nBefore createStore():\r\n```\r\nconsole.log('Is defaultState.posts instance of Array', defaultState.posts instanceof Array); // true\r\n```\r\nAfter createStore():\r\n```\r\nconst store = createStore(postReducer, defaultState);\r\nconsole.log('Is store.state.posts instance of Array', store.getState().posts instanceof Array); // false\r\n```\r\n**What is the expected behavior?**\r\nBefore createStore():\r\n```\r\nconsole.log('Is defaultState.posts instance of Array', defaultState.posts instanceof Array); // true\r\n```\r\nAfter createStore():\r\n```\r\nconst store = createStore( postReducer, defaultState );\r\nconsole.log('Is store.state.posts instance of Array', store.getState().posts instanceof Array); // true\r\n```\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n>\"redux\": \"^3.7.2\"\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2560",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2560/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2560/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2560/events",
    "html_url": "https://github.com/reactjs/redux/pull/2560",
    "id": 250257784,
    "number": 2560,
    "title": "Make middleware API dispatch pass through all call arguments",
    "user": {
      "login": "Asvarox",
      "id": 4227497,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4227497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Asvarox",
      "html_url": "https://github.com/Asvarox",
      "followers_url": "https://api.github.com/users/Asvarox/followers",
      "following_url": "https://api.github.com/users/Asvarox/following{/other_user}",
      "gists_url": "https://api.github.com/users/Asvarox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Asvarox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Asvarox/subscriptions",
      "organizations_url": "https://api.github.com/users/Asvarox/orgs",
      "repos_url": "https://api.github.com/users/Asvarox/repos",
      "events_url": "https://api.github.com/users/Asvarox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Asvarox/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-08-15T08:51:37Z",
    "updated_at": "2017-08-17T07:46:31Z",
    "closed_at": "2017-08-15T13:48:45Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2560",
      "html_url": "https://github.com/reactjs/redux/pull/2560",
      "diff_url": "https://github.com/reactjs/redux/pull/2560.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2560.patch"
    },
    "body": "As discussed in #2501, there's a bit of inconsistency as you can call `store.dispatch` with multiple arguments just fine, but in context of middlewares (say, thunk) only the first one is passed through. This PR tries to fix that."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2559",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2559/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2559/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2559/events",
    "html_url": "https://github.com/reactjs/redux/issues/2559",
    "id": 250236702,
    "number": 2559,
    "title": "Type Definition: undefined state in Reducer<S>",
    "user": {
      "login": "brianjleeofcl",
      "id": 22388794,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22388794?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brianjleeofcl",
      "html_url": "https://github.com/brianjleeofcl",
      "followers_url": "https://api.github.com/users/brianjleeofcl/followers",
      "following_url": "https://api.github.com/users/brianjleeofcl/following{/other_user}",
      "gists_url": "https://api.github.com/users/brianjleeofcl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brianjleeofcl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brianjleeofcl/subscriptions",
      "organizations_url": "https://api.github.com/users/brianjleeofcl/orgs",
      "repos_url": "https://api.github.com/users/brianjleeofcl/repos",
      "events_url": "https://api.github.com/users/brianjleeofcl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brianjleeofcl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-15T07:02:48Z",
    "updated_at": "2017-08-15T13:47:20Z",
    "closed_at": "2017-08-15T13:47:20Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nBug/clarification\r\n\r\n\r\n**What is the current behavior?**\r\n[According to this Stack Overflow answer written by Dan Abramov](https://stackoverflow.com/questions/35622588/how-to-reset-the-state-of-a-redux-store), \r\n```\r\nconst appReducer = combineReducers({\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'USER_LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\n```\r\nis valid code; however, the current type definitions will not allow `undefined` to be explicitly set unless every reference to `State` is changed to `State|undefined`. On one level, this is stylistically questionable; more importantly, this is semantically meaningless since removing references to previous state does not result in an undefined state but rather a reinitialized one.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\n\r\n\r\n**What is the expected behavior?**\r\nOther than marking state as an optional parameter of Reducers, not sure. I am afraid of side effects this change may create.\r\n\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\nRedux 3.7.2, TypeScript 2.4.2\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2558",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2558/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2558/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2558/events",
    "html_url": "https://github.com/reactjs/redux/issues/2558",
    "id": 250155969,
    "number": 2558,
    "title": "CJS build is always deoptimized",
    "user": {
      "login": "jmeas",
      "id": 2322305,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2322305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmeas",
      "html_url": "https://github.com/jmeas",
      "followers_url": "https://api.github.com/users/jmeas/followers",
      "following_url": "https://api.github.com/users/jmeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmeas/subscriptions",
      "organizations_url": "https://api.github.com/users/jmeas/orgs",
      "repos_url": "https://api.github.com/users/jmeas/repos",
      "events_url": "https://api.github.com/users/jmeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-08-14T21:13:40Z",
    "updated_at": "2017-08-15T09:06:44Z",
    "closed_at": "2017-08-14T22:40:27Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nA bug\r\n\r\n**What is the current behavior?**\r\n\r\nThe CJS build will _always_ log out the \"development build in minified environment\" error if you minify it. Additionally, the CJS code is _always_ deoptimized.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\nCorrectly minify a build of Redux using CJS (this is easiest to do using Webpack v1). Observe that you get the \"You are using a development build of Redux\" warning. Also observe that there's no way to opt out of the slow development build.\r\n\r\n**What is the expected behavior?**\r\n\r\nYou wouldn't see that message, and Redux would be optimized.\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nRedux version 3.7+ is affected by this, due to the new Rollup config.\r\n\r\n----\r\n\r\n**Possible explanation**\r\n\r\nThe source code for the CJS build's warning looks like this:\r\n\r\n```js\r\n\t/*\r\n\t* This is a dummy function to check if the function name has been altered by minification.\r\n\t* If the function has been minified and NODE_ENV !== 'production', warn the user.\r\n\t*/\r\n\tfunction isCrushed() {}\r\n\r\n\tif ((\"development\") !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\r\n\t  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\r\n\t}\r\n```\r\n\r\nYou can also see that slow checks _always_ occur in this environment:\r\n\r\n```js\r\nif (true) {\r\n  var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\r\n  if (warningMessage) {\r\n    (0, _warning2[\"default\"])(warningMessage);\r\n  }\r\n}\r\n```\r\n\r\nYou can view this by downloading any version of Redux >= 3.7.0, and checking out the source code within the `lib` directory.\r\n\r\nThis isn't good, because the \"development\" string is hardcoded here. A user's environment will never properly invalidate this conditional.\r\n\r\nThe reason for this is this Rollup plugin config:\r\n\r\nhttps://github.com/reactjs/redux/blob/7d1cabd5fa3d04fd4a21242be721bc2a6ca58f09/rollup.config.js#L17-L19\r\n\r\nwhich defaults to \"development\" because no NODE_ENV is set in the package.json scripts:\r\n\r\nhttps://github.com/reactjs/redux/blob/7d1cabd5fa3d04fd4a21242be721bc2a6ca58f09/package.json#L22\r\n\r\nI'm _thinking_ that this is unexpected behavior, and that the correct behavior is to remove the plugin altogether:\r\n\r\n```diff\r\n- replace({\r\n-   'process.env.NODE_ENV': JSON.stringify(env)\r\n- })\r\n```\r\n\r\nSee #2557 for a PR that implements this solution.\r\n\r\n---\r\n\r\nThis has likely gone unnoticed since the most typical way to reproduce it is to use Webpack v1, and it may just be that most Redux users are on Webpack v2 by now. Or people ignore the warning 😛 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2557",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2557/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2557/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2557/events",
    "html_url": "https://github.com/reactjs/redux/pull/2557",
    "id": 250155921,
    "number": 2557,
    "title": "Remove env plugin from Rollup to resolve CJS build bugs",
    "user": {
      "login": "jmeas",
      "id": 2322305,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2322305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmeas",
      "html_url": "https://github.com/jmeas",
      "followers_url": "https://api.github.com/users/jmeas/followers",
      "following_url": "https://api.github.com/users/jmeas/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmeas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmeas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmeas/subscriptions",
      "organizations_url": "https://api.github.com/users/jmeas/orgs",
      "repos_url": "https://api.github.com/users/jmeas/repos",
      "events_url": "https://api.github.com/users/jmeas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmeas/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-14T21:13:25Z",
    "updated_at": "2017-08-14T22:41:15Z",
    "closed_at": "2017-08-14T22:41:14Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2557",
      "html_url": "https://github.com/reactjs/redux/pull/2557",
      "diff_url": "https://github.com/reactjs/redux/pull/2557.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2557.patch"
    },
    "body": "See #2558 for an explanation for this change"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2556",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2556/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2556/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2556/events",
    "html_url": "https://github.com/reactjs/redux/pull/2556",
    "id": 250115491,
    "number": 2556,
    "title": "Fix example `todomvc` bug",
    "user": {
      "login": "Runrioter",
      "id": 1078011,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1078011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Runrioter",
      "html_url": "https://github.com/Runrioter",
      "followers_url": "https://api.github.com/users/Runrioter/followers",
      "following_url": "https://api.github.com/users/Runrioter/following{/other_user}",
      "gists_url": "https://api.github.com/users/Runrioter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Runrioter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Runrioter/subscriptions",
      "organizations_url": "https://api.github.com/users/Runrioter/orgs",
      "repos_url": "https://api.github.com/users/Runrioter/repos",
      "events_url": "https://api.github.com/users/Runrioter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Runrioter/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-14T18:35:03Z",
    "updated_at": "2017-09-02T01:36:23Z",
    "closed_at": "2017-09-02T01:36:23Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2556",
      "html_url": "https://github.com/reactjs/redux/pull/2556",
      "diff_url": "https://github.com/reactjs/redux/pull/2556.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2556.patch"
    },
    "body": "Fix bug that resulting from `todomvc-app-css` v2.1 update"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2555",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2555/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2555/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2555/events",
    "html_url": "https://github.com/reactjs/redux/pull/2555",
    "id": 250115215,
    "number": 2555,
    "title": "shopping-cart example: add the ability to remove items from your cart",
    "user": {
      "login": "stormasm",
      "id": 1809991,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1809991?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stormasm",
      "html_url": "https://github.com/stormasm",
      "followers_url": "https://api.github.com/users/stormasm/followers",
      "following_url": "https://api.github.com/users/stormasm/following{/other_user}",
      "gists_url": "https://api.github.com/users/stormasm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stormasm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stormasm/subscriptions",
      "organizations_url": "https://api.github.com/users/stormasm/orgs",
      "repos_url": "https://api.github.com/users/stormasm/repos",
      "events_url": "https://api.github.com/users/stormasm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stormasm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-08-14T18:34:02Z",
    "updated_at": "2017-09-21T18:59:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2555",
      "html_url": "https://github.com/reactjs/redux/pull/2555",
      "diff_url": "https://github.com/reactjs/redux/pull/2555.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2555.patch"
    },
    "body": "\r\nI thought it would be nice to add in the functionality to remove items from your\r\ncart prior to checkout.  Sometimes you make a mistake and didn't mean to add\r\nin some items, this way we can now delete items from the cart prior to clicking\r\non the checkout button.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2554",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2554/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2554/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2554/events",
    "html_url": "https://github.com/reactjs/redux/pull/2554",
    "id": 249904607,
    "number": 2554,
    "title": "Schema to demonstrate redux with react components.",
    "user": {
      "login": "pooja1690",
      "id": 7000229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7000229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pooja1690",
      "html_url": "https://github.com/pooja1690",
      "followers_url": "https://api.github.com/users/pooja1690/followers",
      "following_url": "https://api.github.com/users/pooja1690/following{/other_user}",
      "gists_url": "https://api.github.com/users/pooja1690/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pooja1690/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pooja1690/subscriptions",
      "organizations_url": "https://api.github.com/users/pooja1690/orgs",
      "repos_url": "https://api.github.com/users/pooja1690/repos",
      "events_url": "https://api.github.com/users/pooja1690/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pooja1690/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-13T22:56:19Z",
    "updated_at": "2017-08-14T00:41:25Z",
    "closed_at": "2017-08-14T00:41:25Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2554",
      "html_url": "https://github.com/reactjs/redux/pull/2554",
      "diff_url": "https://github.com/reactjs/redux/pull/2554.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2554.patch"
    },
    "body": "This pull request contains a schema to demonstrate how redux plays along with react. I have noticed this a common issue on a lot of blog posts and forums, people not being able to understand how actually works by just reading the documentation. This visual representation can help new comers understand redux better when they visit your website for some learnings.\r\n\r\nImage courtesy: http://makeitopen.com/tutorials/building-the-f8-app/data/"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2553",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2553/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2553/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2553/events",
    "html_url": "https://github.com/reactjs/redux/pull/2553",
    "id": 249904183,
    "number": 2553,
    "title": "Schema to demonstrate how redux plays along with react",
    "user": {
      "login": "pooja1690",
      "id": 7000229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7000229?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pooja1690",
      "html_url": "https://github.com/pooja1690",
      "followers_url": "https://api.github.com/users/pooja1690/followers",
      "following_url": "https://api.github.com/users/pooja1690/following{/other_user}",
      "gists_url": "https://api.github.com/users/pooja1690/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pooja1690/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pooja1690/subscriptions",
      "organizations_url": "https://api.github.com/users/pooja1690/orgs",
      "repos_url": "https://api.github.com/users/pooja1690/repos",
      "events_url": "https://api.github.com/users/pooja1690/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pooja1690/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-08-13T22:47:06Z",
    "updated_at": "2017-08-13T22:51:59Z",
    "closed_at": "2017-08-13T22:51:59Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2553",
      "html_url": "https://github.com/reactjs/redux/pull/2553",
      "diff_url": "https://github.com/reactjs/redux/pull/2553.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2553.patch"
    },
    "body": "This pull request contains a schema to demonstrate how redux plays along with react. I have noticed this a common issue on a lot of blog posts and forums, people not being able to understand how actually works by just reading the documentation. This visual representation can help new comers understand redux better when they visit your website for some learnings.\r\n\r\nImage courtesy: http://makeitopen.com/tutorials/building-the-f8-app/data/"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2552",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2552/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2552/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2552/events",
    "html_url": "https://github.com/reactjs/redux/issues/2552",
    "id": 249853599,
    "number": 2552,
    "title": "Typescript: createStore preloadedState parameter should be Partial<S> when using combineReducers",
    "user": {
      "login": "dawnmist",
      "id": 5810277,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5810277?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dawnmist",
      "html_url": "https://github.com/dawnmist",
      "followers_url": "https://api.github.com/users/dawnmist/followers",
      "following_url": "https://api.github.com/users/dawnmist/following{/other_user}",
      "gists_url": "https://api.github.com/users/dawnmist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dawnmist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dawnmist/subscriptions",
      "organizations_url": "https://api.github.com/users/dawnmist/orgs",
      "repos_url": "https://api.github.com/users/dawnmist/repos",
      "events_url": "https://api.github.com/users/dawnmist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dawnmist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-13T05:28:33Z",
    "updated_at": "2017-09-13T06:16:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nMinor Bug in typescript definitions\r\n\r\n**What is the current behavior?**\r\nWhen using typescript and combineReducers, the preloadedState parameter is forced to contain the full/entire initial state for every reducer. This is because the typescript definition for the preloadedState parameter is \"`S`\" instead of \"`Partial<S>`\".\r\n\r\n**What is the expected behavior?**\r\nFrom the redux documentation: http://redux.js.org/docs/recipes/reducers/InitializingState.html\r\n\r\n> With combineReducers() the behavior is more nuanced. Those reducers whose state is specified in preloadedState will receive that state. Other reducers will receive undefined and because of that will fall back to the state = ... default argument they specify.\r\n> \r\n> In general, preloadedState wins over the state specified by the reducer. This lets reducers specify initial data that makes sense to them as default arguments, but also allows loading existing data (fully or partially) when you're hydrating the store from some persistent storage or the server.\r\n\r\nThe current typescript definition does not allow supplying state for only some reducers.\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\nAll versions using typescript and the preloadedState parameter to createStore as far as I can see."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2551",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2551/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2551/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2551/events",
    "html_url": "https://github.com/reactjs/redux/pull/2551",
    "id": 249737417,
    "number": 2551,
    "title": "Allow updating currentState when calling replaceReducer",
    "user": {
      "login": "cvbuelow",
      "id": 1081493,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1081493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cvbuelow",
      "html_url": "https://github.com/cvbuelow",
      "followers_url": "https://api.github.com/users/cvbuelow/followers",
      "following_url": "https://api.github.com/users/cvbuelow/following{/other_user}",
      "gists_url": "https://api.github.com/users/cvbuelow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cvbuelow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cvbuelow/subscriptions",
      "organizations_url": "https://api.github.com/users/cvbuelow/orgs",
      "repos_url": "https://api.github.com/users/cvbuelow/repos",
      "events_url": "https://api.github.com/users/cvbuelow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cvbuelow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-08-11T20:18:20Z",
    "updated_at": "2017-08-22T16:05:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2551",
      "html_url": "https://github.com/reactjs/redux/pull/2551",
      "diff_url": "https://github.com/reactjs/redux/pull/2551.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2551.patch"
    },
    "body": "Closes #2533 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2550",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2550/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2550/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2550/events",
    "html_url": "https://github.com/reactjs/redux/pull/2550",
    "id": 248998640,
    "number": 2550,
    "title": "Update to Babel 7",
    "user": {
      "login": "hzoo",
      "id": 588473,
      "avatar_url": "https://avatars1.githubusercontent.com/u/588473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hzoo",
      "html_url": "https://github.com/hzoo",
      "followers_url": "https://api.github.com/users/hzoo/followers",
      "following_url": "https://api.github.com/users/hzoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/hzoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hzoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hzoo/subscriptions",
      "organizations_url": "https://api.github.com/users/hzoo/orgs",
      "repos_url": "https://api.github.com/users/hzoo/repos",
      "events_url": "https://api.github.com/users/hzoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hzoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-08-09T11:22:15Z",
    "updated_at": "2017-08-09T22:25:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2550",
      "html_url": "https://github.com/reactjs/redux/pull/2550",
      "diff_url": "https://github.com/reactjs/redux/pull/2550.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2550.patch"
    },
    "body": "If y'all don't want to upgrade now that's ok, just a test PR then.\r\n\r\nCould also change the explicit plugins in favor of https://github.com/babel/babel-preset-env with the [exclude](https://github.com/babel/babel-preset-env#exclude) option?\r\n\r\n```\r\n    \"check-es2015-constants\",\r\n    \"transform-es2015-arrow-functions\",\r\n    \"transform-es2015-block-scoped-functions\",\r\n    \"transform-es2015-block-scoping\",\r\n    [\"transform-es2015-classes\", { \"loose\": true }],\r\n    [\"transform-es2015-computed-properties\", { \"loose\": true }],\r\n    [\"transform-es2015-destructuring\", { \"loose\": true }],\r\n    [\"transform-es2015-for-of\", { \"loose\": true }],\r\n    \"transform-es2015-function-name\",\r\n    \"transform-es2015-literals\",\r\n    \"transform-es2015-object-super\",\r\n    \"transform-es2015-parameters\",\r\n    \"transform-es2015-shorthand-properties\",\r\n    [\"transform-es2015-spread\", { \"loose\": true }],\r\n    \"transform-es2015-sticky-regex\",\r\n    [\"transform-es2015-template-literals\", { \"loose\": true }],\r\n    \"transform-es2015-unicode-regex\",\r\n\r\n    // exclude\r\n    \"transform-es2015-duplicate-keys\"\r\n    \"transform-es2015-typeof-symbol\"\r\n    \"transform-regenerator\"\r\n    \"transform-exponentiation-operator\"\r\n    \"transform-async-to-generator\"\r\n    \"syntax-trailing-function-commas\"\r\n\r\n    \"transform-object-rest-spread\",\r\n    \"transform-es3-member-expression-literals\",\r\n    \"transform-es3-property-literals\"\r\n```"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2549",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2549/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2549/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2549/events",
    "html_url": "https://github.com/reactjs/redux/pull/2549",
    "id": 248430320,
    "number": 2549,
    "title": "added missing invalidateSubreddit action",
    "user": {
      "login": "ahmetcetin",
      "id": 5046786,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5046786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahmetcetin",
      "html_url": "https://github.com/ahmetcetin",
      "followers_url": "https://api.github.com/users/ahmetcetin/followers",
      "following_url": "https://api.github.com/users/ahmetcetin/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahmetcetin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahmetcetin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahmetcetin/subscriptions",
      "organizations_url": "https://api.github.com/users/ahmetcetin/orgs",
      "repos_url": "https://api.github.com/users/ahmetcetin/repos",
      "events_url": "https://api.github.com/users/ahmetcetin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahmetcetin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-07T14:32:50Z",
    "updated_at": "2017-08-07T16:05:58Z",
    "closed_at": "2017-08-07T16:05:53Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2549",
      "html_url": "https://github.com/reactjs/redux/pull/2549",
      "diff_url": "https://github.com/reactjs/redux/pull/2549.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2549.patch"
    },
    "body": "invalidateSubreddit function and its constant were missing in the actions.js after async functions changes introduced."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2548",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2548/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2548/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2548/events",
    "html_url": "https://github.com/reactjs/redux/pull/2548",
    "id": 248361934,
    "number": 2548,
    "title": "Corrected the name of the link for immutable.js library.",
    "user": {
      "login": "Tetsuya3850",
      "id": 27623071,
      "avatar_url": "https://avatars2.githubusercontent.com/u/27623071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tetsuya3850",
      "html_url": "https://github.com/Tetsuya3850",
      "followers_url": "https://api.github.com/users/Tetsuya3850/followers",
      "following_url": "https://api.github.com/users/Tetsuya3850/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tetsuya3850/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tetsuya3850/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tetsuya3850/subscriptions",
      "organizations_url": "https://api.github.com/users/Tetsuya3850/orgs",
      "repos_url": "https://api.github.com/users/Tetsuya3850/repos",
      "events_url": "https://api.github.com/users/Tetsuya3850/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tetsuya3850/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-07T09:55:05Z",
    "updated_at": "2017-08-07T16:04:40Z",
    "closed_at": "2017-08-07T16:04:34Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2548",
      "html_url": "https://github.com/reactjs/redux/pull/2548",
      "diff_url": "https://github.com/reactjs/redux/pull/2548.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2548.patch"
    },
    "body": "It was previously confused with the article's title above.\r\nWas a bit puzzled when reading the docs. So I made a simple replace.\r\nHope you could merge it!"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2547",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2547/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2547/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2547/events",
    "html_url": "https://github.com/reactjs/redux/pull/2547",
    "id": 248253650,
    "number": 2547,
    "title": "Correct information about running tests for examples",
    "user": {
      "login": "seethemhigh",
      "id": 10567153,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10567153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seethemhigh",
      "html_url": "https://github.com/seethemhigh",
      "followers_url": "https://api.github.com/users/seethemhigh/followers",
      "following_url": "https://api.github.com/users/seethemhigh/following{/other_user}",
      "gists_url": "https://api.github.com/users/seethemhigh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seethemhigh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seethemhigh/subscriptions",
      "organizations_url": "https://api.github.com/users/seethemhigh/orgs",
      "repos_url": "https://api.github.com/users/seethemhigh/repos",
      "events_url": "https://api.github.com/users/seethemhigh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seethemhigh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-08-06T15:25:32Z",
    "updated_at": "2017-08-07T01:48:34Z",
    "closed_at": "2017-08-07T01:48:34Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2547",
      "html_url": "https://github.com/reactjs/redux/pull/2547",
      "diff_url": "https://github.com/reactjs/redux/pull/2547.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2547.patch"
    },
    "body": "I changed some information about the Examples section in CONRIBUTING.md:\r\n\r\n- use the actual command to run examples tests (the old one didn't work)\r\n- remove the build command, since it doesn't work (there's no npm script for building examples)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2546",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2546/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2546/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2546/events",
    "html_url": "https://github.com/reactjs/redux/pull/2546",
    "id": 248236475,
    "number": 2546,
    "title": "Use a callback ref in the Real World Example",
    "user": {
      "login": "seethemhigh",
      "id": 10567153,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10567153?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seethemhigh",
      "html_url": "https://github.com/seethemhigh",
      "followers_url": "https://api.github.com/users/seethemhigh/followers",
      "following_url": "https://api.github.com/users/seethemhigh/following{/other_user}",
      "gists_url": "https://api.github.com/users/seethemhigh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seethemhigh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seethemhigh/subscriptions",
      "organizations_url": "https://api.github.com/users/seethemhigh/orgs",
      "repos_url": "https://api.github.com/users/seethemhigh/repos",
      "events_url": "https://api.github.com/users/seethemhigh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seethemhigh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-06T09:35:41Z",
    "updated_at": "2017-08-06T16:21:01Z",
    "closed_at": "2017-08-06T16:20:56Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2546",
      "html_url": "https://github.com/reactjs/redux/pull/2546",
      "diff_url": "https://github.com/reactjs/redux/pull/2546.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2546.patch"
    },
    "body": "Hello. Here's a minor PR for you that replaces a string ref with a callback. "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2545",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2545/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2545/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2545/events",
    "html_url": "https://github.com/reactjs/redux/pull/2545",
    "id": 248158976,
    "number": 2545,
    "title": "Added doc methods for dealing with actions",
    "user": {
      "login": "deltaskelta",
      "id": 9424192,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9424192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deltaskelta",
      "html_url": "https://github.com/deltaskelta",
      "followers_url": "https://api.github.com/users/deltaskelta/followers",
      "following_url": "https://api.github.com/users/deltaskelta/following{/other_user}",
      "gists_url": "https://api.github.com/users/deltaskelta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deltaskelta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deltaskelta/subscriptions",
      "organizations_url": "https://api.github.com/users/deltaskelta/orgs",
      "repos_url": "https://api.github.com/users/deltaskelta/repos",
      "events_url": "https://api.github.com/users/deltaskelta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deltaskelta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-05T04:45:02Z",
    "updated_at": "2017-08-05T16:55:46Z",
    "closed_at": "2017-08-05T16:55:43Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2545",
      "html_url": "https://github.com/reactjs/redux/pull/2545",
      "diff_url": "https://github.com/reactjs/redux/pull/2545.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2545.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2544",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2544/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2544/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2544/events",
    "html_url": "https://github.com/reactjs/redux/issues/2544",
    "id": 248154344,
    "number": 2544,
    "title": "Documentation: Reusing reducer logic",
    "user": {
      "login": "deltaskelta",
      "id": 9424192,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9424192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deltaskelta",
      "html_url": "https://github.com/deltaskelta",
      "followers_url": "https://api.github.com/users/deltaskelta/followers",
      "following_url": "https://api.github.com/users/deltaskelta/following{/other_user}",
      "gists_url": "https://api.github.com/users/deltaskelta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deltaskelta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deltaskelta/subscriptions",
      "organizations_url": "https://api.github.com/users/deltaskelta/orgs",
      "repos_url": "https://api.github.com/users/deltaskelta/repos",
      "events_url": "https://api.github.com/users/deltaskelta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deltaskelta/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-08-05T03:23:06Z",
    "updated_at": "2017-08-05T04:45:32Z",
    "closed_at": "2017-08-05T03:31:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\n(If this is a *usage question*, please **do not post it here**—post it on [Stack Overflow](http://stackoverflow.com/questions/tagged/redux) instead. If this is not a “feature” or a “bug”, or the phrase “How do I...?” applies, then it's probably a usage question.)\r\n\r\n\r\n\r\n**What is the current behavior?**\r\n\r\nThe Reusing reducer logic section of the documentation makes no mention of the actual action definition which is an important part of the process outlined in the doc.\r\n\r\n```javascript\r\nfunction createCounterWithNamedType(counterName = '') {\r\n    return function counter(state = 0, action) {\r\n        switch (action.type) {\r\n            case `INCREMENT_${counterName}`:\r\n                return state + 1;\r\n            case `DECREMENT_${counterName}`:\r\n                return state - 1;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI realize this example is supposed to be ismplistic, but I think if it were to mimic the regular pattern including the defining of actions.. Something like below...\r\n\r\n```javascript\r\n// define the action nae\r\nconst incrementAction = (counterName) => {\r\n    return 'INCREMENT_${counterName}'\r\n} \r\n\r\n// define the action\r\nconst incrementCounter = (counterName, val) => {\r\n    return {\r\n        type: incrementAction(counterName),\r\n        value: val\r\n    }\r\n}\r\n\r\n// reducer factory\r\nfunction createCounterWithNamedType(counterName = '') {\r\n    return function counter(state = 0, action) {\r\n        switch (action.type) {\r\n            case incrementAction(counterName):\r\n                return action.val;\r\n            case incrementAction(counterName):\r\n                return action.val;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI realized halfway through writing this that the incrementer using the `action` pattern might be a little weird since the action caller will be responsible for deciding the value, but I hope my point is understood. \r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2543",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2543/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2543/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2543/events",
    "html_url": "https://github.com/reactjs/redux/issues/2543",
    "id": 247967637,
    "number": 2543,
    "title": "Error handling while updating store",
    "user": {
      "login": "isnifer",
      "id": 1788245,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1788245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isnifer",
      "html_url": "https://github.com/isnifer",
      "followers_url": "https://api.github.com/users/isnifer/followers",
      "following_url": "https://api.github.com/users/isnifer/following{/other_user}",
      "gists_url": "https://api.github.com/users/isnifer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isnifer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isnifer/subscriptions",
      "organizations_url": "https://api.github.com/users/isnifer/orgs",
      "repos_url": "https://api.github.com/users/isnifer/repos",
      "events_url": "https://api.github.com/users/isnifer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isnifer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-04T10:34:42Z",
    "updated_at": "2017-08-04T15:15:58Z",
    "closed_at": "2017-08-04T15:15:58Z",
    "author_association": "NONE",
    "body": "**I want to report a *question-bug*?**  \r\nSo, redux make an update in `try` block, but doesn't handle an error in `catch`. Is there any reason don't do this?\r\nHow could I debug these errors on prod without redux-logger of course? \r\n\r\n**What is the current behavior?**\r\nError in reducer while updating state doesn't throw.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\nhttps://github.com/reactjs/redux/blob/master/src/createStore.js#L168-L173\r\n\r\n## Production build - clean console\r\n![image](https://user-images.githubusercontent.com/1788245/28965209-a102f9b0-7918-11e7-9ec8-3dcbcff43e28.png)\r\n\r\n## Development build - I see an error only with redux-logger\r\n![image](https://user-images.githubusercontent.com/1788245/28965233-bbe0da5e-7918-11e7-968e-1c02fafdc4c6.png)\r\n\r\n## Development build (without redux-logger) - I don't see an error\r\n![image](https://user-images.githubusercontent.com/1788245/28965287-f6e89696-7918-11e7-8100-0a4a8cb6c9bc.png)\r\n\r\n## Development build (without redux-logger but mentioned lines were changed)\r\n```js\r\ntry {\r\n  isDispatching = true;\r\n  currentState = currentReducer(currentState, action);\r\n} catch(e) {\r\n  console.error(e)\r\n} finally {\r\n  isDispatching = false;\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/1788245/28965369-74b376ea-7919-11e7-96da-1578470ffa84.png)\r\n\r\n**What is the expected behavior?**\r\nError message about an error\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\nRedux: 3.7.2\r\nBrowser: Chrome\r\nOS: macOS\r\n\r\n**Did this work in previous versions of Redux?**\r\nMaybe\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2542",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2542/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2542/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2542/events",
    "html_url": "https://github.com/reactjs/redux/issues/2542",
    "id": 247745807,
    "number": 2542,
    "title": "Update docs regarding server-side hydration?",
    "user": {
      "login": "djake",
      "id": 6454660,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6454660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djake",
      "html_url": "https://github.com/djake",
      "followers_url": "https://api.github.com/users/djake/followers",
      "following_url": "https://api.github.com/users/djake/following{/other_user}",
      "gists_url": "https://api.github.com/users/djake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djake/subscriptions",
      "organizations_url": "https://api.github.com/users/djake/orgs",
      "repos_url": "https://api.github.com/users/djake/repos",
      "events_url": "https://api.github.com/users/djake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djake/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 225483610,
        "url": "https://api.github.com/repos/reactjs/redux/labels/docs",
        "name": "docs",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-03T15:28:28Z",
    "updated_at": "2017-08-28T02:02:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The documentation at http://redux.js.org/docs/recipes/ServerRendering.html includes this line:\r\n\r\n```\r\n  // Compile an initial state\r\n  let preloadedState = { counter }\r\n```\r\nI am a few months into using redux and have tried very hard to understand the idiomatic way of doing things. It seems to me that this is an anti-pattern, and that @gaearon agrees:\r\n> In general we consider initialState argument to createStore an optimization. (https://github.com/reactjs/redux/issues/1431#issuecomment-186910503)\r\n\r\n> You can pass the whole initial state tree as a second argument when creating the store. This is useful for hydrating persisted data or data received from the server. However we never recommend building that state tree in your code. (https://github.com/reactjs/redux/issues/1189#issuecomment-168025590)\r\n\r\nThe recipe itself says:\r\n\r\n```\r\n* create a fresh, new Redux store instance on every request;\r\n* optionally dispatch some actions;\r\n* pull the state out of store;\r\n* and then pass the state along to the client.\r\n```\r\nTherefore, I do not ever pass a preloadedState argument on the server, but instead initialize the store and then dispatch actions as needed before rendering a response. However, I have nagging discomfort, after just a few months working with redux, telling my team that something is an anti-pattern even though it is the approach used in the official documented recipe.\r\n\r\nWould you be inclined to accept a pull request updating the docs, or am I misunderstanding this issue? Even if it is as simple as changing the comment to, it would put my mind at ease, and hopefully will save someone some time grappling with this issue:\r\n\r\n```\r\n// Compile an initial state - as always, you should only populate your store by dispatching actions, but we are skipping that here to keep this short\r\n```"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2541",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2541/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2541/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2541/events",
    "html_url": "https://github.com/reactjs/redux/pull/2541",
    "id": 247599375,
    "number": 2541,
    "title": "Delete period before comma",
    "user": {
      "login": "zhouzhongyuan",
      "id": 717817,
      "avatar_url": "https://avatars2.githubusercontent.com/u/717817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhouzhongyuan",
      "html_url": "https://github.com/zhouzhongyuan",
      "followers_url": "https://api.github.com/users/zhouzhongyuan/followers",
      "following_url": "https://api.github.com/users/zhouzhongyuan/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhouzhongyuan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhouzhongyuan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhouzhongyuan/subscriptions",
      "organizations_url": "https://api.github.com/users/zhouzhongyuan/orgs",
      "repos_url": "https://api.github.com/users/zhouzhongyuan/repos",
      "events_url": "https://api.github.com/users/zhouzhongyuan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhouzhongyuan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-03T05:52:58Z",
    "updated_at": "2017-08-03T15:53:05Z",
    "closed_at": "2017-08-03T15:53:05Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2541",
      "html_url": "https://github.com/reactjs/redux/pull/2541",
      "diff_url": "https://github.com/reactjs/redux/pull/2541.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2541.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2540",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2540/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2540/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2540/events",
    "html_url": "https://github.com/reactjs/redux/pull/2540",
    "id": 247137319,
    "number": 2540,
    "title": "Line 404 -414 Agreement",
    "user": {
      "login": "KevinEverywhere",
      "id": 643109,
      "avatar_url": "https://avatars2.githubusercontent.com/u/643109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KevinEverywhere",
      "html_url": "https://github.com/KevinEverywhere",
      "followers_url": "https://api.github.com/users/KevinEverywhere/followers",
      "following_url": "https://api.github.com/users/KevinEverywhere/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinEverywhere/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KevinEverywhere/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinEverywhere/subscriptions",
      "organizations_url": "https://api.github.com/users/KevinEverywhere/orgs",
      "repos_url": "https://api.github.com/users/KevinEverywhere/repos",
      "events_url": "https://api.github.com/users/KevinEverywhere/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KevinEverywhere/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-01T17:04:28Z",
    "updated_at": "2017-08-03T08:44:19Z",
    "closed_at": "2017-08-02T14:00:38Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2540",
      "html_url": "https://github.com/reactjs/redux/pull/2540",
      "diff_url": "https://github.com/reactjs/redux/pull/2540.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2540.patch"
    },
    "body": "TodoList on line 414 should be replaced with VisibleTodoList to match the import statement in line 404. Either TodoList or VisibleTodoList works functionally, but VisibleTodoList demonstrates implementation of container component."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2539",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2539/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2539/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2539/events",
    "html_url": "https://github.com/reactjs/redux/pull/2539",
    "id": 247046225,
    "number": 2539,
    "title": "Make easy for compose",
    "user": {
      "login": "shfshanyue",
      "id": 13389461,
      "avatar_url": "https://avatars0.githubusercontent.com/u/13389461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shfshanyue",
      "html_url": "https://github.com/shfshanyue",
      "followers_url": "https://api.github.com/users/shfshanyue/followers",
      "following_url": "https://api.github.com/users/shfshanyue/following{/other_user}",
      "gists_url": "https://api.github.com/users/shfshanyue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shfshanyue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shfshanyue/subscriptions",
      "organizations_url": "https://api.github.com/users/shfshanyue/orgs",
      "repos_url": "https://api.github.com/users/shfshanyue/repos",
      "events_url": "https://api.github.com/users/shfshanyue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shfshanyue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-01T12:02:27Z",
    "updated_at": "2017-08-01T16:09:24Z",
    "closed_at": "2017-08-01T16:09:23Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2539",
      "html_url": "https://github.com/reactjs/redux/pull/2539",
      "diff_url": "https://github.com/reactjs/redux/pull/2539.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2539.patch"
    },
    "body": "It should be behave like the first function if only give one for compose.\r\nso it could be easier."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2538",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2538/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2538/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2538/events",
    "html_url": "https://github.com/reactjs/redux/pull/2538",
    "id": 246956374,
    "number": 2538,
    "title": "Add missing SET_VISIBILITY_FILTER import",
    "user": {
      "login": "ariabov",
      "id": 1295568,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1295568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariabov",
      "html_url": "https://github.com/ariabov",
      "followers_url": "https://api.github.com/users/ariabov/followers",
      "following_url": "https://api.github.com/users/ariabov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariabov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariabov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariabov/subscriptions",
      "organizations_url": "https://api.github.com/users/ariabov/orgs",
      "repos_url": "https://api.github.com/users/ariabov/repos",
      "events_url": "https://api.github.com/users/ariabov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariabov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-08-01T05:08:42Z",
    "updated_at": "2017-08-01T16:11:56Z",
    "closed_at": "2017-08-01T16:11:56Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2538",
      "html_url": "https://github.com/reactjs/redux/pull/2538",
      "diff_url": "https://github.com/reactjs/redux/pull/2538.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2538.patch"
    },
    "body": "The reducer example uses `SET_VISIBILITY_FILTER` constant,  but the import statement prior to the example is not explicitly importing it. This change explicitly imports the constant."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2537",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2537/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2537/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2537/events",
    "html_url": "https://github.com/reactjs/redux/pull/2537",
    "id": 246302245,
    "number": 2537,
    "title": "Update FAQ: \"Dispatch multiple actions\" links",
    "user": {
      "login": "maxhallinan",
      "id": 3819855,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3819855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxhallinan",
      "html_url": "https://github.com/maxhallinan",
      "followers_url": "https://api.github.com/users/maxhallinan/followers",
      "following_url": "https://api.github.com/users/maxhallinan/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxhallinan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxhallinan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxhallinan/subscriptions",
      "organizations_url": "https://api.github.com/users/maxhallinan/orgs",
      "repos_url": "https://api.github.com/users/maxhallinan/repos",
      "events_url": "https://api.github.com/users/maxhallinan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxhallinan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-07-28T09:58:36Z",
    "updated_at": "2017-07-31T19:05:56Z",
    "closed_at": "2017-07-31T15:55:13Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2537",
      "html_url": "https://github.com/reactjs/redux/pull/2537",
      "diff_url": "https://github.com/reactjs/redux/pull/2537.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2537.patch"
    },
    "body": "This updates links for \"Should I dispatch multiple actions in a row from one action creator?\" in the Actions FAQ per #1785 . cc: @markerikson "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2536",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2536/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2536/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2536/events",
    "html_url": "https://github.com/reactjs/redux/issues/2536",
    "id": 246300065,
    "number": 2536,
    "title": "State update gets undone on next action",
    "user": {
      "login": "pikzen",
      "id": 373126,
      "avatar_url": "https://avatars1.githubusercontent.com/u/373126?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pikzen",
      "html_url": "https://github.com/pikzen",
      "followers_url": "https://api.github.com/users/pikzen/followers",
      "following_url": "https://api.github.com/users/pikzen/following{/other_user}",
      "gists_url": "https://api.github.com/users/pikzen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pikzen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pikzen/subscriptions",
      "organizations_url": "https://api.github.com/users/pikzen/orgs",
      "repos_url": "https://api.github.com/users/pikzen/repos",
      "events_url": "https://api.github.com/users/pikzen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pikzen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-07-28T09:50:04Z",
    "updated_at": "2017-07-29T21:49:50Z",
    "closed_at": "2017-07-29T21:49:41Z",
    "author_association": "NONE",
    "body": "I have a store made up of a few dozen keys combined through combineReducers. Some of them are plain javascript objects, other are `Immutable.Record` objects from immutable.js.\r\nUpon dispatching an action to add some data to this reducer, the action is done properly, and the reducer returns an updated list. On the next action dispatch however, this entire update is undone (and the reducer is updated). This happens no matter the action that happens after. My UI state that is bound to this state leaf doesn't get updated, even when breaking after, which leads me to believe the state update has not been done.\r\n\r\nThe fun part is that I have other reducers that have the _exact_ same layout, yet do not suffer from this problem.\r\n\r\n![capture d ecran de 2017-07-28 09-37-18](https://user-images.githubusercontent.com/373126/28713540-b8eae288-738f-11e7-8392-6287ca1ece46.png)\r\n![capture d ecran de 2017-07-28 09-37-21](https://user-images.githubusercontent.com/373126/28713558-c4bdda34-738f-11e7-9650-0119fad79692.png)\r\n\r\n\r\nThis is how my reducer is defined (typescript)\r\n```typescript\r\nconst _initialState = {\r\n  courses: Immutable.List<Course>(),\r\n  loading: true\r\n};\r\nclass Courses extends Immutable.Record(_initialState) {\r\n  courses: Immutable.List<Course>;\r\n  loading: boolean;\r\n}\r\nconst initialState = new Courses();\r\nexport type CoursesState = typeof initialState;\r\n\r\nexport const courses = handleActions(\r\n  {\r\n    ...\r\n    [addCourses]: (state: CoursesState, action: Actions.AddCourses) => {\r\n      return state.merge({\r\n        courses: state.courses.concat(action.payload.courses.map(it => new Course(it))),\r\n        loading: false\r\n      });\r\n    },\r\n    ...\r\n  },\r\n  initialState\r\n);\r\n```\r\n\r\nI unfortunately do not have steps for reproduction. I have tried a simple project, but it doesn't exhibit this behavior. I have setup a breakpoint in combineReducers.js (line 125, in `combination()`) which confirms that my state is properly updated at first, then the next action reverts it.\r\n\r\nI have tried both with and without redux-immutable, the issue is the same. This did not happen with pure JS objects, data was kept.\r\n\r\nLibraries: redux 3.7.2, react-redux 5.0.5, react-router-redux 5.0.0@alpha6\r\nAffected browsers: Chrome 60.0.3112.24, Firefox 54.0.1, Firefox Nightly\r\nOS: Debian 9.0 Stretch"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2535",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2535/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2535/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2535/events",
    "html_url": "https://github.com/reactjs/redux/pull/2535",
    "id": 246284376,
    "number": 2535,
    "title": "Update FAQ: Why should I use action creators?",
    "user": {
      "login": "maxhallinan",
      "id": 3819855,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3819855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxhallinan",
      "html_url": "https://github.com/maxhallinan",
      "followers_url": "https://api.github.com/users/maxhallinan/followers",
      "following_url": "https://api.github.com/users/maxhallinan/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxhallinan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxhallinan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxhallinan/subscriptions",
      "organizations_url": "https://api.github.com/users/maxhallinan/orgs",
      "repos_url": "https://api.github.com/users/maxhallinan/repos",
      "events_url": "https://api.github.com/users/maxhallinan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxhallinan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-07-28T08:44:12Z",
    "updated_at": "2017-07-31T19:04:46Z",
    "closed_at": "2017-07-31T15:53:24Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2535",
      "html_url": "https://github.com/reactjs/redux/pull/2535",
      "diff_url": "https://github.com/reactjs/redux/pull/2535.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2535.patch"
    },
    "body": "This adds a \"Why should I use action creators?\" section to the Actions FAQ. The answer is based on sources suggested in #1785 . cc: @markerikson "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2534",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2534/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2534/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2534/events",
    "html_url": "https://github.com/reactjs/redux/pull/2534",
    "id": 246146566,
    "number": 2534,
    "title": "fix shopping-cart example to show inventory",
    "user": {
      "login": "ahuff44",
      "id": 4911964,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4911964?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahuff44",
      "html_url": "https://github.com/ahuff44",
      "followers_url": "https://api.github.com/users/ahuff44/followers",
      "following_url": "https://api.github.com/users/ahuff44/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahuff44/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahuff44/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahuff44/subscriptions",
      "organizations_url": "https://api.github.com/users/ahuff44/orgs",
      "repos_url": "https://api.github.com/users/ahuff44/repos",
      "events_url": "https://api.github.com/users/ahuff44/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahuff44/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-27T19:36:51Z",
    "updated_at": "2017-07-27T20:50:05Z",
    "closed_at": "2017-07-27T20:20:31Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2534",
      "html_url": "https://github.com/reactjs/redux/pull/2534",
      "diff_url": "https://github.com/reactjs/redux/pull/2534.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2534.patch"
    },
    "body": "I noticed at https://codesandbox.io/s/github/reactjs/redux/tree/master/examples/shopping-cart that the number of items left in stock isn't shown; I dug around and figured out that the `inventory` prop wasn't being passed down"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2533",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2533/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2533/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2533/events",
    "html_url": "https://github.com/reactjs/redux/issues/2533",
    "id": 246063011,
    "number": 2533,
    "title": "Feature: Allow updating currentState when calling replaceReducer",
    "user": {
      "login": "cvbuelow",
      "id": 1081493,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1081493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cvbuelow",
      "html_url": "https://github.com/cvbuelow",
      "followers_url": "https://api.github.com/users/cvbuelow/followers",
      "following_url": "https://api.github.com/users/cvbuelow/following{/other_user}",
      "gists_url": "https://api.github.com/users/cvbuelow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cvbuelow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cvbuelow/subscriptions",
      "organizations_url": "https://api.github.com/users/cvbuelow/orgs",
      "repos_url": "https://api.github.com/users/cvbuelow/repos",
      "events_url": "https://api.github.com/users/cvbuelow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cvbuelow/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-27T14:41:48Z",
    "updated_at": "2017-08-04T01:50:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I would like to suggest adding an optional param to `replaceReducer` that would allow updating the `currentState`. This is needed when using code splitting with SSR (see use case below).\r\n\r\nProposed code change (in bold)\r\n<pre>\r\nfunction replaceReducer(nextReducer<strong>, nextState</strong>) {\r\n  if (typeof nextReducer !== 'function') {\r\n    throw new Error('Expected the nextReducer to be a function.')\r\n  }\r\n\r\n  currentReducer = nextReducer\r\n  <strong>currentState = nextState || currentState</strong>\r\n  dispatch({ type: ActionTypes.INIT })\r\n}\r\n</pre>\r\nThis change will allow hydrating the store with state that was inlined in the page when doing SSR but belongs to a reducer that is being loaded after the store has been initialized because of code splitting.\r\n\r\nUse case: https://gist.github.com/cvbuelow/ea7bd4deb7824fdb65d81cd2b8c60f5e\r\nThis is based off @gaearon's [gist](https://gist.github.com/gaearon/0a2213881b5d53973514) and addresses the SSR concerns mentioned there. Look at the [latest revision](https://gist.github.com/cvbuelow/ea7bd4deb7824fdb65d81cd2b8c60f5e/revisions#diff-8b3d2f22fc7e4f74eeb25762947f7c36) in my fork to see the diff.\r\n\r\nLet me know If this feature looks ok and I can submit a PR."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2532",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2532/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2532/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2532/events",
    "html_url": "https://github.com/reactjs/redux/issues/2532",
    "id": 245966441,
    "number": 2532,
    "title": "Dispatching several actions in sequence for single reducer doesn't reflect changes in state for connected component",
    "user": {
      "login": "likerRr",
      "id": 1290558,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1290558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/likerRr",
      "html_url": "https://github.com/likerRr",
      "followers_url": "https://api.github.com/users/likerRr/followers",
      "following_url": "https://api.github.com/users/likerRr/following{/other_user}",
      "gists_url": "https://api.github.com/users/likerRr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/likerRr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/likerRr/subscriptions",
      "organizations_url": "https://api.github.com/users/likerRr/orgs",
      "repos_url": "https://api.github.com/users/likerRr/repos",
      "events_url": "https://api.github.com/users/likerRr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/likerRr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-07-27T08:39:14Z",
    "updated_at": "2017-07-28T11:20:28Z",
    "closed_at": "2017-07-27T15:21:34Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen dispatching several different actions for one reducer, only the last one triggers component update. It might be better to show then explain.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n\r\nhttps://codesandbox.io/s/LLVGBnQA\r\n\r\nSome notes on provided example:\r\n1. Component reflects a history of updates of it's prop `redirectPath`. When it comes as `null` then `no redirect` string adds to history.\r\n2. There is a reducer which returns just a plain `string` or `null` depending on action.\r\n3. By pressing a button `Do redirect` I expect both actions (`SET_REDIRECT` and `CLEAR_REDIRECT`) provide changed state to `AppContainer` component. But only the latest one (`CLEAR_REDIRECT`) triggers render method with `null` value.\r\n4. If we add slight delay between dispatching these actions, then both of them trigger component's render. You can check it by pressing `Do redirect with delay` button.\r\n\r\n**What is the expected behavior?**\r\n\r\nBoth changes (provided by `SET_REDIRECT` and `CLEAR_REDIRECT` actions) in state should trigger component update without using `setTimeout` when dispatching actions.\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\n\r\nredux v3.7.1\r\nreact-redux v5.0.5\r\nUbuntu 16.04 LTS\r\nI haven't tried this on previous versions of redux.\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2531",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2531/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2531/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2531/events",
    "html_url": "https://github.com/reactjs/redux/pull/2531",
    "id": 245891688,
    "number": 2531,
    "title": "Minor copy update.",
    "user": {
      "login": "haleyhuiliu",
      "id": 26551303,
      "avatar_url": "https://avatars0.githubusercontent.com/u/26551303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haleyhuiliu",
      "html_url": "https://github.com/haleyhuiliu",
      "followers_url": "https://api.github.com/users/haleyhuiliu/followers",
      "following_url": "https://api.github.com/users/haleyhuiliu/following{/other_user}",
      "gists_url": "https://api.github.com/users/haleyhuiliu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haleyhuiliu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haleyhuiliu/subscriptions",
      "organizations_url": "https://api.github.com/users/haleyhuiliu/orgs",
      "repos_url": "https://api.github.com/users/haleyhuiliu/repos",
      "events_url": "https://api.github.com/users/haleyhuiliu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haleyhuiliu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-27T00:20:54Z",
    "updated_at": "2017-07-27T00:27:14Z",
    "closed_at": "2017-07-27T00:27:14Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2531",
      "html_url": "https://github.com/reactjs/redux/pull/2531",
      "diff_url": "https://github.com/reactjs/redux/pull/2531.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2531.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2530",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2530/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2530/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2530/events",
    "html_url": "https://github.com/reactjs/redux/pull/2530",
    "id": 245861222,
    "number": 2530,
    "title": "Improve typings for Middleware",
    "user": {
      "login": "davidka",
      "id": 1681446,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1681446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidka",
      "html_url": "https://github.com/davidka",
      "followers_url": "https://api.github.com/users/davidka/followers",
      "following_url": "https://api.github.com/users/davidka/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidka/subscriptions",
      "organizations_url": "https://api.github.com/users/davidka/orgs",
      "repos_url": "https://api.github.com/users/davidka/repos",
      "events_url": "https://api.github.com/users/davidka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-07-26T21:32:17Z",
    "updated_at": "2017-09-01T16:02:56Z",
    "closed_at": "2017-09-01T16:02:56Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2530",
      "html_url": "https://github.com/reactjs/redux/pull/2530",
      "diff_url": "https://github.com/reactjs/redux/pull/2530.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2530.patch"
    },
    "body": "This PR fixes Issue #2481 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2529",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2529/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2529/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2529/events",
    "html_url": "https://github.com/reactjs/redux/issues/2529",
    "id": 245594302,
    "number": 2529,
    "title": "Action inside the type attribute Why is called type rather than called name?",
    "user": {
      "login": "CN-YUANYU",
      "id": 13724214,
      "avatar_url": "https://avatars3.githubusercontent.com/u/13724214?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CN-YUANYU",
      "html_url": "https://github.com/CN-YUANYU",
      "followers_url": "https://api.github.com/users/CN-YUANYU/followers",
      "following_url": "https://api.github.com/users/CN-YUANYU/following{/other_user}",
      "gists_url": "https://api.github.com/users/CN-YUANYU/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CN-YUANYU/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CN-YUANYU/subscriptions",
      "organizations_url": "https://api.github.com/users/CN-YUANYU/orgs",
      "repos_url": "https://api.github.com/users/CN-YUANYU/repos",
      "events_url": "https://api.github.com/users/CN-YUANYU/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CN-YUANYU/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-26T03:15:46Z",
    "updated_at": "2017-07-26T04:43:55Z",
    "closed_at": "2017-07-26T04:43:55Z",
    "author_association": "NONE",
    "body": "Action inside the type attribute Why is called type rather than called name?"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2528",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2528/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2528/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2528/events",
    "html_url": "https://github.com/reactjs/redux/pull/2528",
    "id": 245241738,
    "number": 2528,
    "title": "Add design decisions to FAQ document",
    "user": {
      "login": "sbakkila",
      "id": 20525825,
      "avatar_url": "https://avatars1.githubusercontent.com/u/20525825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbakkila",
      "html_url": "https://github.com/sbakkila",
      "followers_url": "https://api.github.com/users/sbakkila/followers",
      "following_url": "https://api.github.com/users/sbakkila/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbakkila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbakkila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbakkila/subscriptions",
      "organizations_url": "https://api.github.com/users/sbakkila/orgs",
      "repos_url": "https://api.github.com/users/sbakkila/repos",
      "events_url": "https://api.github.com/users/sbakkila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbakkila/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-07-24T23:35:14Z",
    "updated_at": "2017-08-08T00:59:03Z",
    "closed_at": "2017-08-08T00:59:03Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2528",
      "html_url": "https://github.com/reactjs/redux/pull/2528",
      "diff_url": "https://github.com/reactjs/redux/pull/2528.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2528.patch"
    },
    "body": "I wrote up some answers for design decisions to the FAQ in response to [issue #1785](https://github.com/reactjs/redux/issues/1785)\r\n\r\nI don't think that the md is perfect, and my page isn't showing up when I build the gitbook, but I wasn't sure how to proceed. Please advise on this. Thanks!\r\n\r\nThis is my first open source contribution. 😄 "
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2527",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2527/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2527/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2527/events",
    "html_url": "https://github.com/reactjs/redux/pull/2527",
    "id": 245146833,
    "number": 2527,
    "title": "Clarify details on connecting with React",
    "user": {
      "login": "papaben",
      "id": 821115,
      "avatar_url": "https://avatars2.githubusercontent.com/u/821115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/papaben",
      "html_url": "https://github.com/papaben",
      "followers_url": "https://api.github.com/users/papaben/followers",
      "following_url": "https://api.github.com/users/papaben/following{/other_user}",
      "gists_url": "https://api.github.com/users/papaben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/papaben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/papaben/subscriptions",
      "organizations_url": "https://api.github.com/users/papaben/orgs",
      "repos_url": "https://api.github.com/users/papaben/repos",
      "events_url": "https://api.github.com/users/papaben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/papaben/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-24T17:07:02Z",
    "updated_at": "2017-07-26T00:57:44Z",
    "closed_at": "2017-07-25T23:25:40Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2527",
      "html_url": "https://github.com/reactjs/redux/pull/2527",
      "diff_url": "https://github.com/reactjs/redux/pull/2527.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2527.patch"
    },
    "body": "1. `VisibleTodoList` has not yet been introduced in the documentation\r\n2. It's slightly confusing to see the combination of a component and container without preamble in a \"here's the rest of the code\" section.\r\n3. What is a `ref`?"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2526",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2526/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2526/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2526/events",
    "html_url": "https://github.com/reactjs/redux/pull/2526",
    "id": 244521126,
    "number": 2526,
    "title": "2508 Remove Native `reduce` dependency from Compose",
    "user": {
      "login": "andrewshatnyy",
      "id": 809118,
      "avatar_url": "https://avatars0.githubusercontent.com/u/809118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewshatnyy",
      "html_url": "https://github.com/andrewshatnyy",
      "followers_url": "https://api.github.com/users/andrewshatnyy/followers",
      "following_url": "https://api.github.com/users/andrewshatnyy/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewshatnyy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewshatnyy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewshatnyy/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewshatnyy/orgs",
      "repos_url": "https://api.github.com/users/andrewshatnyy/repos",
      "events_url": "https://api.github.com/users/andrewshatnyy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewshatnyy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-07-20T23:06:56Z",
    "updated_at": "2017-07-25T00:44:11Z",
    "closed_at": "2017-07-21T16:53:12Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2526",
      "html_url": "https://github.com/reactjs/redux/pull/2526",
      "diff_url": "https://github.com/reactjs/redux/pull/2526.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2526.patch"
    },
    "body": "Addresses https://github.com/reactjs/redux/issues/2525"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2525",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2525/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2525/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2525/events",
    "html_url": "https://github.com/reactjs/redux/issues/2525",
    "id": 244516745,
    "number": 2525,
    "title": "Compose breaks if Array.prototype.reduce is overwritten",
    "user": {
      "login": "andrewshatnyy",
      "id": 809118,
      "avatar_url": "https://avatars0.githubusercontent.com/u/809118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewshatnyy",
      "html_url": "https://github.com/andrewshatnyy",
      "followers_url": "https://api.github.com/users/andrewshatnyy/followers",
      "following_url": "https://api.github.com/users/andrewshatnyy/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewshatnyy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewshatnyy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewshatnyy/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewshatnyy/orgs",
      "repos_url": "https://api.github.com/users/andrewshatnyy/repos",
      "events_url": "https://api.github.com/users/andrewshatnyy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewshatnyy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-20T22:40:29Z",
    "updated_at": "2017-07-21T16:51:18Z",
    "closed_at": "2017-07-21T02:23:15Z",
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**  \r\nFeature\r\n\r\nI am writing an SDK with redux. Last week I had to deal with a strange error `TypeError: d.apply(...) is not a function`. When creating a store with multiple enhancers / middleware `applyMiddleware(logger1, logger2)` TypedError would appear occasionally. Apparently client would load their `applicaition.js` which has ES overrides to support older IE versions.\r\n\r\nI understand this is an edge case but It would be nice \r\n\r\n**What is the current behavior?**\r\n[`compose`](https://github.com/reactjs/redux/blob/master/src/compose.js#L21) method relies on `Array.prototype.reduce` to compose middleware.\r\n`applyMiddleware` will throw an error If `Array.prototype.reduce` has been augmented on the page by some other library (prototype.js or some other wacky lib)\r\nIt is hard to find out what exactly is the problem if you don't know what is going on underneath.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem via https://jsfiddle.net or similar.**\r\n[jsfiddle](https://jsfiddle.net/zf9o2rqc/)\r\n\r\n**What is the expected behavior?**\r\nI suggest using `reduce` from from `lodash` which is already in the dependency chain.\r\n\r\n\r\n**Which versions of Redux, and which browser and OS are affected by this issue? Did this work in previous versions of Redux?**\r\nAll recent versions with `compose.js`\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2524",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2524/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2524/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2524/events",
    "html_url": "https://github.com/reactjs/redux/issues/2524",
    "id": 243688589,
    "number": 2524,
    "title": "Why has nextListeners in createStore.js?",
    "user": {
      "login": "MrErHu",
      "id": 16449143,
      "avatar_url": "https://avatars3.githubusercontent.com/u/16449143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrErHu",
      "html_url": "https://github.com/MrErHu",
      "followers_url": "https://api.github.com/users/MrErHu/followers",
      "following_url": "https://api.github.com/users/MrErHu/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrErHu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrErHu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrErHu/subscriptions",
      "organizations_url": "https://api.github.com/users/MrErHu/orgs",
      "repos_url": "https://api.github.com/users/MrErHu/repos",
      "events_url": "https://api.github.com/users/MrErHu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrErHu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-07-18T11:46:03Z",
    "updated_at": "2017-07-18T14:43:50Z",
    "closed_at": "2017-07-18T14:00:06Z",
    "author_association": "NONE",
    "body": "The Annotations is: \r\n1. The subscriptions are snapshotted just before every `dispatch()` call.If you subscribe or unsubscribe while the listeners are being invoked, this will not have any effect on the `dispatch()` that is currently in progress.However, the next `dispatch()` call, whether nested or not, will use a more recent snapshot of the subscription list.\r\n\r\nso,the purpose of nextListeners is that subscribe or unsubscribe will not effect current listener invoke progress。But JavaScript is single thread, I think that will not happen."
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2523",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2523/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2523/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2523/events",
    "html_url": "https://github.com/reactjs/redux/pull/2523",
    "id": 243674151,
    "number": 2523,
    "title": "Make ReducersMapObject more typesafe",
    "user": {
      "login": "osi-oswald",
      "id": 5512839,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5512839?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/osi-oswald",
      "html_url": "https://github.com/osi-oswald",
      "followers_url": "https://api.github.com/users/osi-oswald/followers",
      "following_url": "https://api.github.com/users/osi-oswald/following{/other_user}",
      "gists_url": "https://api.github.com/users/osi-oswald/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/osi-oswald/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/osi-oswald/subscriptions",
      "organizations_url": "https://api.github.com/users/osi-oswald/orgs",
      "repos_url": "https://api.github.com/users/osi-oswald/repos",
      "events_url": "https://api.github.com/users/osi-oswald/events{/privacy}",
      "received_events_url": "https://api.github.com/users/osi-oswald/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-18T10:44:56Z",
    "updated_at": "2017-07-18T10:52:33Z",
    "closed_at": "2017-07-18T10:52:33Z",
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/reactjs/redux/pulls/2523",
      "html_url": "https://github.com/reactjs/redux/pull/2523",
      "diff_url": "https://github.com/reactjs/redux/pull/2523.diff",
      "patch_url": "https://github.com/reactjs/redux/pull/2523.patch"
    },
    "body": "This will catch misspelling of properties inside combineReducers and complain if reducers don't reduce the correct child state type.\r\n\r\n(\"S = any\" for backwards compatibility)"
  },
  {
    "url": "https://api.github.com/repos/reactjs/redux/issues/2522",
    "repository_url": "https://api.github.com/repos/reactjs/redux",
    "labels_url": "https://api.github.com/repos/reactjs/redux/issues/2522/labels{/name}",
    "comments_url": "https://api.github.com/repos/reactjs/redux/issues/2522/comments",
    "events_url": "https://api.github.com/repos/reactjs/redux/issues/2522/events",
    "html_url": "https://github.com/reactjs/redux/issues/2522",
    "id": 243619787,
    "number": 2522,
    "title": "Failed to compile",
    "user": {
      "login": "fitchsong",
      "id": 7778432,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7778432?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fitchsong",
      "html_url": "https://github.com/fitchsong",
      "followers_url": "https://api.github.com/users/fitchsong/followers",
      "following_url": "https://api.github.com/users/fitchsong/following{/other_user}",
      "gists_url": "https://api.github.com/users/fitchsong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fitchsong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fitchsong/subscriptions",
      "organizations_url": "https://api.github.com/users/fitchsong/orgs",
      "repos_url": "https://api.github.com/users/fitchsong/repos",
      "events_url": "https://api.github.com/users/fitchsong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fitchsong/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-07-18T07:08:55Z",
    "updated_at": "2017-07-18T09:30:58Z",
    "closed_at": "2017-07-18T09:30:58Z",
    "author_association": "NONE",
    "body": "When I visit localhost:3000   Console throw the following error:\r\n\r\n./src/components/MainSection.js\r\n  Line 14:  'propTypes' is not defined             no-undef\r\n  Line 19:  'state' is not defined                 no-undef\r\n  Line 21:  'handleClearCompleted' is not defined  no-undef\r\n  Line 25:  'handleShow' is not defined            no-undef\r\n\r\nSearch for the keywords to learn more about each error.\r\nThis error occurred during the build time and cannot be dismissed."
  }
]
